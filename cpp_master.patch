diff --git a/.gitignore b/.gitignore
index 40f5e0af3be8e7926c551398a20861a5c3b68450..4d900f79853dd55e23c96ecd42549c63bc31069f 100644
--- a/.gitignore
+++ b/.gitignore
@@ -9,8 +9,6 @@
 /autom4te.cache/
 /config.h.in
 /configure
-/msgpack_vc2008.sln
-/msgpack_vc2008.vcproj
 Makefile.in
 
 # Files generated by the configure script.
@@ -39,13 +37,9 @@ Makefile
 /test/cases
 /test/convert
 /test/fixint
-/test/fixint_c
 /test/msgpack_test
-/test/msgpackc_test
 /test/object
 /test/pack_unpack
-/test/pack_unpack_c
 /test/streaming
-/test/streaming_c
 /test/version
 /test/zone
diff --git a/CMakeLists.txt b/CMakeLists.txt
index f9762d1d773b920d3f90e25bb9f729a04ac30f70..283c063d3a7209a5b10e0658a212383f083b3498 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,11 +1,11 @@
-CMAKE_MINIMUM_REQUIRED (VERSION 2.8.12)
+CMAKE_MINIMUM_REQUIRED (VERSION 3.0.0)
 
 IF ((CMAKE_VERSION VERSION_GREATER 3.1) OR
     (CMAKE_VERSION VERSION_EQUAL 3.1))
     CMAKE_POLICY(SET CMP0054 NEW)
 ENDIF ()
 
-PROJECT (msgpack)
+PROJECT (msgpack CXX)
 
 FILE (READ ${CMAKE_CURRENT_SOURCE_DIR}/include/msgpack/version_master.h contents)
 STRING (REGEX MATCH "#define MSGPACK_VERSION_MAJOR *([0-9a-zA-Z_]*)" NULL_OUT ${contents})
@@ -27,18 +27,6 @@ OPTION (MSGPACK_CXX11 "Using c++11 compiler" OFF)
 OPTION (MSGPACK_32BIT "32bit compile" OFF)
 OPTION (MSGPACK_BOOST "Using boost libraries" OFF)
 
-IF (APPLE)
-    SET(CMAKE_MACOSX_RPATH ON)
-    SET(CMAKE_SKIP_BUILD_RPATH FALSE)
-    SET(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
-    SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
-    SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
-    LIST(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "${CMAKE_INSTALL_PREFIX}/lib" isSystemDir)
-    IF ("${isSystemDir}" STREQUAL "-1")
-        SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
-    ENDIF ()
-ENDIF ()
-
 IF (MSGPACK_USE_X3_PARSE)
    IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
       SET (CMAKE_CXX_FLAGS "-DMSGPACK_USE_X3_PARSE -std=c++14 ${CMAKE_CXX_FLAGS}")
@@ -88,11 +76,9 @@ ENDIF ()
 IF (MSGPACK_32BIT)
    IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
       SET (CMAKE_CXX_FLAGS "-m32 ${CMAKE_CXX_FLAGS}")
-      SET (CMAKE_C_FLAGS "-m32 ${CMAKE_C_FLAGS}")
       SET (CMAKE_EXE_LINKER_FLAGS "-m32 ${CMAKE_EXE_LINKER_FLAGS}")
    ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
       SET (CMAKE_CXX_FLAGS "-m32 ${CMAKE_CXX_FLAGS}")
-      SET (CMAKE_C_FLAGS "-m32 ${CMAKE_C_FLAGS}")
       SET (CMAKE_EXE_LINKER_FLAGS "-m32 ${CMAKE_EXE_LINKER_FLAGS}")
    ENDIF ()
 ENDIF ()
@@ -118,7 +104,6 @@ IF (MSGPACK_BOOST)
 ENDIF ()
 
 IF (MSGPACK_CHAR_SIGN)
-   SET (CMAKE_C_FLAGS "-f${MSGPACK_CHAR_SIGN}-char ${CMAKE_C_FLAGS}")
    SET (CMAKE_CXX_FLAGS "-f${MSGPACK_CHAR_SIGN}-char ${CMAKE_CXX_FLAGS}")
 ENDIF ()
 
@@ -128,26 +113,6 @@ ELSE ()
    SET (CMAKE_CXX_FLAGS "-DMSGPACK_DEFAULT_API_VERSION=3 ${CMAKE_CXX_FLAGS}")
 ENDIF ()
 
-FILE (GLOB_RECURSE PREDEF_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}/external/boost/predef/include/boost ${CMAKE_CURRENT_SOURCE_DIR}/external/boost/predef/include/boost/*.h)
-FOREACH (F ${PREDEF_FILES})
-   SET(M "Converting ${F}")
-   MESSAGE(STATUS ${M})
-   FILE (READ ${CMAKE_CURRENT_SOURCE_DIR}/external/boost/predef/include/boost/${F} CONTENT)
-   STRING(REPLACE "BOOST_" "MSGPACK_" CONTENT ${CONTENT})
-   STRING(REPLACE "boost/" "msgpack/" CONTENT ${CONTENT})
-   FILE (GENERATE OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/include/msgpack/${F} CONTENT ${CONTENT})
-ENDFOREACH ()
-
-FILE (GLOB_RECURSE PREPROCESSOR_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}/external/boost/preprocessor/include/boost ${CMAKE_CURRENT_SOURCE_DIR}/external/boost/preprocessor/include/boost/*.hpp)
-FOREACH (F ${PREPROCESSOR_FILES})
-   SET(M "Converting ${F}")
-   MESSAGE(STATUS ${M})
-   FILE (READ ${CMAKE_CURRENT_SOURCE_DIR}/external/boost/preprocessor/include/boost/${F} CONTENT)
-   STRING(REPLACE "BOOST_" "MSGPACK_" CONTENT ${CONTENT})
-   STRING(REPLACE "boost/" "msgpack/" CONTENT ${CONTENT})
-   FILE (GENERATE OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/include/msgpack/${F} CONTENT ${CONTENT})
-ENDFOREACH ()
-
 FIND_PACKAGE (GTest)
 FIND_PACKAGE (ZLIB)
 FIND_PACKAGE (Threads)
@@ -156,54 +121,6 @@ IF (GTEST_FOUND AND ZLIB_FOUND AND THREADS_FOUND AND NOT "${MSGPACK_FUZZ_REGRESS
     OPTION (MSGPACK_GEN_COVERAGE "Enable running gcov to get a test coverage report." OFF)
 ENDIF ()
 
-OPTION (MSGPACK_ENABLE_CXX "Enable C++ interface." ON)
-
-OPTION (MSGPACK_CXX_ONLY "Build only C++ libraries (header-only)." OFF)
-IF (MSGPACK_CXX_ONLY)
-    IF (DEFINED MSGPACK_ENABLE_SHARED AND MSGPACK_ENABLE_SHARED)
-        MESSAGE(WARNING "MSGPACK_ENABLE_SHARED is overridden to OFF by MSGPACK_CXX_ONLY")
-    ENDIF ()
-    SET (MSGPACK_ENABLE_SHARED OFF)
-    IF (DEFINED MSGPACK_ENABLE_STATIC AND MSGPACK_ENABLE_STATIC)
-        MESSAGE(WARNING "MSGPACK_ENABLE_STATIC is overridden to OFF by MSGPACK_CXX_ONLY")
-    ENDIF ()
-    SET (MSGPACK_ENABLE_STATIC OFF)
-    IF (DEFINED MSGPACK_ENABLE_CXX AND NOT MSGPACK_ENABLE_CXX)
-        MESSAGE(WARNING "MSGPACK_ENABLE_CXX is overridden to ON by MSGPACK_CXX_ONLY")
-    ENDIF ()
-    SET (MSGPACK_ENABLE_CXX ON)
-ELSE ()
-    IF (DEFINED BUILD_SHARED_LIBS)
-        IF (BUILD_SHARED_LIBS)
-            IF (DEFINED MSGPACK_ENABLE_SHARED AND NOT MSGPACK_ENABLE_SHARED)
-                MESSAGE(WARNING "MSGPACK_ENABLE_SHARED is overridden to ON by BUILD_SHARED_LIBS")
-            ENDIF ()
-            SET (MSGPACK_ENABLE_SHARED ON)
-            IF (DEFINED MSGPACK_ENABLE_STATIC AND MSGPACK_ENABLE_STATIC)
-                MESSAGE(WARNING "MSGPACK_ENABLE_STATIC is overridden to OFF by BUILD_SHARED_LIBS")
-            ENDIF ()
-            SET (MSGPACK_ENABLE_STATIC OFF)
-        ELSE ()
-            IF (DEFINED MSGPACK_ENABLE_SHARED AND MSGPACK_ENABLE_SHARED)
-                MESSAGE(WARNING "MSGPACK_ENABLE_SHARED is overridden to OFF by BUILD_SHARED_LIBS")
-            ENDIF ()
-            SET (MSGPACK_ENABLE_SHARED OFF)
-            IF (DEFINED MSGPACK_ENABLE_STATIC AND NOT MSGPACK_ENABLE_STATIC)
-                MESSAGE(WARNING "MSGPACK_ENABLE_STATIC is overridden to ON by BUILD_SHARED_LIBS")
-            ENDIF ()
-            SET (MSGPACK_ENABLE_STATIC ON)
-        ENDIF ()
-    ELSE ()
-        IF (NOT DEFINED MSGPACK_ENABLE_SHARED)
-            SET (MSGPACK_ENABLE_SHARED ON)
-        ENDIF ()
-        IF (NOT DEFINED MSGPACK_ENABLE_STATIC)
-            SET (MSGPACK_ENABLE_STATIC ON)
-        ENDIF ()
-        SET (BUILD_SHARED_LIBS ${MSGPACK_ENABLE_SHARED})
-    ENDIF ()
-ENDIF ()
-
 INCLUDE (CheckCXXSourceCompiles)
 CHECK_CXX_SOURCE_COMPILES ("
 #include <bits/atomicity.h>
@@ -222,67 +139,14 @@ EXECUTE_PROCESS (
     COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_CURRENT_BINARY_DIR}/src/msgpack
 )
 
-CONFIGURE_FILE (
-    msgpack.pc.in
-    msgpack.pc
-    @ONLY
-)
+ADD_LIBRARY (msgpackc-cxx INTERFACE)
 
-
-IF (MSGPACK_ENABLE_SHARED OR MSGPACK_ENABLE_STATIC)
-    ADD_LIBRARY (msgpackc
-        ${msgpackc_SOURCES}
-        ${msgpackc_HEADERS}
-    )
-
-    SET_TARGET_PROPERTIES (msgpackc PROPERTIES SOVERSION 2 VERSION 2.0.0)
-
-    TARGET_INCLUDE_DIRECTORIES (msgpackc
-        PUBLIC
-            $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
-            $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include>
-            $<INSTALL_INTERFACE:include>
-        PRIVATE
-            ${CMAKE_CURRENT_SOURCE_DIR}
-    )
-ENDIF ()
-
-IF (MSGPACK_ENABLE_CXX AND ((CMAKE_VERSION VERSION_GREATER 3.0) OR (CMAKE_VERSION VERSION_EQUAL 3.0)))
-    ADD_LIBRARY (msgpackc-cxx INTERFACE)
-
-    TARGET_INCLUDE_DIRECTORIES (msgpackc-cxx
-        INTERFACE
-            $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
-            $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include>
-            $<INSTALL_INTERFACE:include>
-    )
-ENDIF ()
-
-IF (MSGPACK_ENABLE_SHARED AND MSGPACK_ENABLE_STATIC)
-    ADD_LIBRARY (msgpackc-static STATIC
-        ${msgpackc_SOURCES}
-        ${msgpackc_HEADERS}
-    )
-
-    TARGET_INCLUDE_DIRECTORIES (msgpackc-static
-        PUBLIC
-            $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
-            $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include>
-            $<INSTALL_INTERFACE:include>
-        PRIVATE
-            ${CMAKE_CURRENT_SOURCE_DIR}
-    )
-
-    SET_TARGET_PROPERTIES (msgpackc-static PROPERTIES OUTPUT_NAME "msgpackc")
-
-    IF (MSGPACK_ENABLE_SHARED)
-        IF (MSVC)
-            SET_TARGET_PROPERTIES (msgpackc PROPERTIES IMPORT_SUFFIX "_import.lib")
-        ELSEIF (MINGW)
-            SET_TARGET_PROPERTIES (msgpackc PROPERTIES IMPORT_SUFFIX ".dll.a")
-        ENDIF ()
-    ENDIF ()
-ENDIF ()
+TARGET_INCLUDE_DIRECTORIES (msgpackc-cxx
+    INTERFACE
+        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
+        $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include>
+        $<INSTALL_INTERFACE:include>
+)
 
 # enable regression testing
 IF ("${MSGPACK_FUZZ_REGRESSION}" STREQUAL "ON" AND "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
@@ -305,7 +169,6 @@ IF (MSGPACK_GEN_COVERAGE)
     ENDIF ()
 
     INCLUDE(CodeCoverage)
-    SET (CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} ${COVERAGE_FLAGS}")
     SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${COVERAGE_FLAGS}")
 
     SETUP_TARGET_FOR_COVERAGE(coverage make coverage test)
@@ -320,24 +183,6 @@ IF (MSGPACK_BUILD_TESTS)
     ADD_SUBDIRECTORY (test)
 ENDIF ()
 
-IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
-    IF (MSGPACK_ENABLE_SHARED OR MSGPACK_ENABLE_STATIC)
-        SET_PROPERTY (TARGET msgpackc APPEND_STRING PROPERTY COMPILE_FLAGS " -Wall -Wextra -DPIC")
-    ENDIF ()
-    IF (MSGPACK_ENABLE_SHARED AND MSGPACK_ENABLE_STATIC)
-       SET_PROPERTY (TARGET msgpackc-static APPEND_STRING PROPERTY COMPILE_FLAGS " -Wall -Wextra" )
-    ENDIF ()
-ENDIF ()
-
-IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
-    IF (MSGPACK_ENABLE_SHARED OR MSGPACK_ENABLE_STATIC)
-        SET_PROPERTY (TARGET msgpackc APPEND_STRING PROPERTY COMPILE_FLAGS " -Wno-mismatched-tags")
-    ENDIF ()
-    IF (MSGPACK_ENABLE_SHARED AND MSGPACK_ENABLE_STATIC)
-        SET_PROPERTY (TARGET msgpackc-static APPEND_STRING PROPERTY COMPILE_FLAGS " -Wno-mismatched-tags")
-    ENDIF ()
-ENDIF ()
-
 IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
     IF (CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
         STRING(REGEX REPLACE "/W[0-4]" "/W3 /WX" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
@@ -346,83 +191,24 @@ IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
     ENDIF ()
 ENDIF ()
 
-IF ("${CMAKE_C_COMPILER_ID}" STREQUAL "MSVC")
-    IF (CMAKE_C_FLAGS MATCHES "/W[0-4]")
-        STRING(REGEX REPLACE "/W[0-4]" "/W3 /WX" CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
-    ELSE ()
-        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W3 /WX")
-    ENDIF ()
-ENDIF ()
-
-IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC90" OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC10")
-    SET_SOURCE_FILES_PROPERTIES(${msgpackc_SOURCES} PROPERTIES LANGUAGE CXX)
-ENDIF ()
-
 IF ("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "sparc")
-    SET (CMAKE_C_FLAGS   "-DMSGPACK_ZONE_ALIGN=8 ${CMAKE_C_FLAGS}")
     SET (CMAKE_CXX_FLAGS "-DMSGPACK_ZONE_ALIGN=8 ${CMAKE_CXX_FLAGS}")
 ENDIF ()
 
-IF (NOT DEFINED CMAKE_INSTALL_BINDIR)
-    SET(CMAKE_INSTALL_BINDIR bin)
-ENDIF ()
-
-IF (NOT DEFINED CMAKE_INSTALL_LIBDIR)
-    SET(CMAKE_INSTALL_LIBDIR lib)
-ENDIF ()
-
 IF (MSGPACK_BUILD_EXAMPLES)
     ADD_SUBDIRECTORY (example)
 ENDIF ()
 
-IF (MSGPACK_ENABLE_SHARED OR MSGPACK_ENABLE_STATIC)
-    SET (MSGPACK_INSTALLTARGETS msgpackc)
-ENDIF ()
-
-IF (MSGPACK_ENABLE_CXX AND ((CMAKE_VERSION VERSION_GREATER 3.0) OR (CMAKE_VERSION VERSION_EQUAL 3.0)))
-    LIST (APPEND MSGPACK_INSTALLTARGETS msgpackc-cxx)
-ENDIF ()
+SET (MSGPACK_INSTALLTARGETS msgpackc-cxx)
 
-IF (MSGPACK_ENABLE_SHARED AND MSGPACK_ENABLE_STATIC)
-    LIST (APPEND MSGPACK_INSTALLTARGETS msgpackc-static)
-ENDIF ()
-
-INSTALL (TARGETS ${MSGPACK_INSTALLTARGETS} EXPORT msgpack-targets
-    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
-    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-)
 FOREACH (file ${msgpackc_HEADERS})
     GET_FILENAME_COMPONENT (dir ${file} PATH)
     INSTALL (FILES ${file} DESTINATION ${CMAKE_INSTALL_PREFIX}/${dir})
 ENDFOREACH ()
-IF (NOT MSGPACK_CXX_ONLY AND NOT MSVC)
-    INSTALL (FILES ${CMAKE_CURRENT_BINARY_DIR}/msgpack.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
-ENDIF ()
 
 # Doxygen
 FIND_PACKAGE (Doxygen)
 IF (DOXYGEN_FOUND)
-    LIST (APPEND Doxyfile_c_CONTENT
-        COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_c
-        COMMAND ${CMAKE_COMMAND} -E echo "FILE_PATTERNS      = *.h" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_c
-        COMMAND ${CMAKE_COMMAND} -E echo "OUTPUT_DIRECTORY   = doc_c" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_c
-        COMMAND ${CMAKE_COMMAND} -E echo "INPUT              = ${CMAKE_CURRENT_SOURCE_DIR}/include" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_c
-        COMMAND ${CMAKE_COMMAND} -E echo "EXTRACT_ALL        = YES" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_c
-        COMMAND ${CMAKE_COMMAND} -E echo "PROJECT_NAME       = \"MessagePack for C\"" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_c
-        COMMAND ${CMAKE_COMMAND} -E echo "STRIP_FROM_PATH    = ${CMAKE_CURRENT_SOURCE_DIR}/include" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_c
-    )
-    IF (DOXYGEN_DOT_FOUND)
-        LIST (APPEND Doxyfile_c_CONTENT
-            COMMAND ${CMAKE_COMMAND} -E echo "HAVE_DOT       = YES" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_c
-        )
-    ENDIF ()
-    ADD_CUSTOM_TARGET (
-        doxygen_c
-        ${Doxyfile_c_CONTENT}
-        COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_c
-        VERBATIM
-    )
     LIST (APPEND Doxyfile_cpp_CONTENT
         COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_cpp
         COMMAND ${CMAKE_COMMAND} -E echo "FILE_PATTERNS      = *.hpp" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_cpp
@@ -437,52 +223,10 @@ IF (DOXYGEN_FOUND)
         )
     ENDIF ()
     ADD_CUSTOM_TARGET (
-        doxygen_cpp
+        doxygen
         ${Doxyfile_cpp_CONTENT}
         COMMAND ${CMAKE_COMMAND} -E echo "PROJECT_NAME       = \"MessagePack for C++\"" >> ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_cpp
         COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile_cpp
         VERBATIM
     )
-    ADD_CUSTOM_TARGET (
-        doxygen
-        DEPENDS doxygen_c doxygen_cpp
-    )
-ENDIF ()
-
-INCLUDE (CMakePackageConfigHelpers)
-
-SET (CMAKE_INSTALL_CMAKEDIR "${CMAKE_INSTALL_LIBDIR}/cmake/msgpack")
-
-WRITE_BASIC_PACKAGE_VERSION_FILE (
-    msgpack-config-version.cmake
-    VERSION ${VERSION}
-    COMPATIBILITY SameMajorVersion
-)
-
-IF (NOT CMAKE_VERSION VERSION_LESS 3.0)
-    EXPORT (EXPORT msgpack-targets
-        FILE "${CMAKE_CURRENT_BINARY_DIR}/msgpack-targets.cmake"
-    )
-ENDIF ()
-
-CONFIGURE_PACKAGE_CONFIG_FILE (msgpack-config.cmake.in
-    msgpack-config.cmake
-    INSTALL_DESTINATION "${CMAKE_INSTALL_CMAKEDIR}"
-)
-
-IF (NOT MSGPACK_CXX_ONLY)
-    INSTALL (EXPORT msgpack-targets
-        FILE
-            msgpack-targets.cmake
-        DESTINATION
-            "${CMAKE_INSTALL_CMAKEDIR}"
-    )
-
-    INSTALL (
-        FILES
-            "${CMAKE_CURRENT_BINARY_DIR}/msgpack-config.cmake"
-            "${CMAKE_CURRENT_BINARY_DIR}/msgpack-config-version.cmake"
-        DESTINATION
-            "${CMAKE_INSTALL_CMAKEDIR}"
-    )
 ENDIF ()
diff --git a/Files.cmake b/Files.cmake
index 576220496bb1b94ce5b06650831e27d87cfbb27f..f450b3e7864274710b9dbd243667459a058712a8 100644
--- a/Files.cmake
+++ b/Files.cmake
@@ -1,762 +1,324 @@
-LIST (APPEND msgpackc_SOURCES
-    src/objectc.c
-    src/unpack.c
-    src/version.c
-    src/vrefbuffer.c
-    src/zone.c
-)
-
-# For both C and C++ libraries
+# .h files
 LIST (APPEND msgpackc_HEADERS
-    include/msgpack/fbuffer.h
+    include/msgpack/gcc_atomic.h
     include/msgpack/object.h
-    include/msgpack/predef.h
-    include/msgpack/predef/architecture.h
-    include/msgpack/predef/architecture/alpha.h
-    include/msgpack/predef/architecture/arm.h
-    include/msgpack/predef/architecture/blackfin.h
-    include/msgpack/predef/architecture/convex.h
-    include/msgpack/predef/architecture/ia64.h
-    include/msgpack/predef/architecture/m68k.h
-    include/msgpack/predef/architecture/mips.h
-    include/msgpack/predef/architecture/parisc.h
-    include/msgpack/predef/architecture/ppc.h
-    include/msgpack/predef/architecture/ptx.h
-    include/msgpack/predef/architecture/pyramid.h
-    include/msgpack/predef/architecture/rs6k.h
-    include/msgpack/predef/architecture/sparc.h
-    include/msgpack/predef/architecture/superh.h
-    include/msgpack/predef/architecture/sys370.h
-    include/msgpack/predef/architecture/sys390.h
-    include/msgpack/predef/architecture/x86.h
-    include/msgpack/predef/architecture/x86/32.h
-    include/msgpack/predef/architecture/x86/64.h
-    include/msgpack/predef/architecture/z.h
-    include/msgpack/predef/compiler.h
-    include/msgpack/predef/compiler/borland.h
-    include/msgpack/predef/compiler/clang.h
-    include/msgpack/predef/compiler/comeau.h
-    include/msgpack/predef/compiler/compaq.h
-    include/msgpack/predef/compiler/diab.h
-    include/msgpack/predef/compiler/digitalmars.h
-    include/msgpack/predef/compiler/dignus.h
-    include/msgpack/predef/compiler/edg.h
-    include/msgpack/predef/compiler/ekopath.h
-    include/msgpack/predef/compiler/gcc.h
-    include/msgpack/predef/compiler/gcc_xml.h
-    include/msgpack/predef/compiler/greenhills.h
-    include/msgpack/predef/compiler/hp_acc.h
-    include/msgpack/predef/compiler/iar.h
-    include/msgpack/predef/compiler/ibm.h
-    include/msgpack/predef/compiler/intel.h
-    include/msgpack/predef/compiler/kai.h
-    include/msgpack/predef/compiler/llvm.h
-    include/msgpack/predef/compiler/metaware.h
-    include/msgpack/predef/compiler/metrowerks.h
-    include/msgpack/predef/compiler/microtec.h
-    include/msgpack/predef/compiler/mpw.h
-    include/msgpack/predef/compiler/nvcc.h
-    include/msgpack/predef/compiler/palm.h
-    include/msgpack/predef/compiler/pgi.h
-    include/msgpack/predef/compiler/sgi_mipspro.h
-    include/msgpack/predef/compiler/sunpro.h
-    include/msgpack/predef/compiler/tendra.h
-    include/msgpack/predef/compiler/visualc.h
-    include/msgpack/predef/compiler/watcom.h
-    include/msgpack/predef/detail/_cassert.h
-    include/msgpack/predef/detail/_exception.h
-    include/msgpack/predef/detail/comp_detected.h
-    include/msgpack/predef/detail/endian_compat.h
-    include/msgpack/predef/detail/os_detected.h
-    include/msgpack/predef/detail/platform_detected.h
-    include/msgpack/predef/detail/test.h
-    include/msgpack/predef/detail/test_def.h
-    include/msgpack/predef/hardware.h
-    include/msgpack/predef/hardware/simd.h
-    include/msgpack/predef/hardware/simd/arm.h
-    include/msgpack/predef/hardware/simd/arm/versions.h
-    include/msgpack/predef/hardware/simd/ppc.h
-    include/msgpack/predef/hardware/simd/ppc/versions.h
-    include/msgpack/predef/hardware/simd/x86.h
-    include/msgpack/predef/hardware/simd/x86/versions.h
-    include/msgpack/predef/hardware/simd/x86_amd.h
-    include/msgpack/predef/hardware/simd/x86_amd/versions.h
-    include/msgpack/predef/language.h
-    include/msgpack/predef/language/cuda.h
-    include/msgpack/predef/language/objc.h
-    include/msgpack/predef/language/stdc.h
-    include/msgpack/predef/language/stdcpp.h
-    include/msgpack/predef/library.h
-    include/msgpack/predef/library/c.h
-    include/msgpack/predef/library/c/_prefix.h
-    include/msgpack/predef/library/c/cloudabi.h
-    include/msgpack/predef/library/c/gnu.h
-    include/msgpack/predef/library/c/uc.h
-    include/msgpack/predef/library/c/vms.h
-    include/msgpack/predef/library/c/zos.h
-    include/msgpack/predef/library/std.h
-    include/msgpack/predef/library/std/_prefix.h
-    include/msgpack/predef/library/std/cxx.h
-    include/msgpack/predef/library/std/dinkumware.h
-    include/msgpack/predef/library/std/libcomo.h
-    include/msgpack/predef/library/std/modena.h
-    include/msgpack/predef/library/std/msl.h
-    include/msgpack/predef/library/std/roguewave.h
-    include/msgpack/predef/library/std/sgi.h
-    include/msgpack/predef/library/std/stdcpp3.h
-    include/msgpack/predef/library/std/stlport.h
-    include/msgpack/predef/library/std/vacpp.h
-    include/msgpack/predef/make.h
-    include/msgpack/predef/os.h
-    include/msgpack/predef/os/aix.h
-    include/msgpack/predef/os/amigaos.h
-    include/msgpack/predef/os/android.h
-    include/msgpack/predef/os/beos.h
-    include/msgpack/predef/os/bsd.h
-    include/msgpack/predef/os/bsd/bsdi.h
-    include/msgpack/predef/os/bsd/dragonfly.h
-    include/msgpack/predef/os/bsd/free.h
-    include/msgpack/predef/os/bsd/net.h
-    include/msgpack/predef/os/bsd/open.h
-    include/msgpack/predef/os/cygwin.h
-    include/msgpack/predef/os/haiku.h
-    include/msgpack/predef/os/hpux.h
-    include/msgpack/predef/os/ios.h
-    include/msgpack/predef/os/irix.h
-    include/msgpack/predef/os/linux.h
-    include/msgpack/predef/os/macos.h
-    include/msgpack/predef/os/os400.h
-    include/msgpack/predef/os/qnxnto.h
-    include/msgpack/predef/os/solaris.h
-    include/msgpack/predef/os/unix.h
-    include/msgpack/predef/os/vms.h
-    include/msgpack/predef/os/windows.h
-    include/msgpack/predef/other.h
-    include/msgpack/predef/other/endian.h
-    include/msgpack/predef/other/workaround.h
-    include/msgpack/predef/platform.h
-    include/msgpack/predef/platform/cloudabi.h
-    include/msgpack/predef/platform/ios.h
-    include/msgpack/predef/platform/mingw.h
-    include/msgpack/predef/platform/mingw32.h
-    include/msgpack/predef/platform/mingw64.h
-    include/msgpack/predef/platform/windows_desktop.h
-    include/msgpack/predef/platform/windows_phone.h
-    include/msgpack/predef/platform/windows_runtime.h
-    include/msgpack/predef/platform/windows_server.h
-    include/msgpack/predef/platform/windows_store.h
-    include/msgpack/predef/platform/windows_system.h
-    include/msgpack/predef/platform/windows_uwp.h
-    include/msgpack/predef/version.h
-    include/msgpack/predef/version_number.h
     include/msgpack/sysdep.h
     include/msgpack/unpack_define.h
     include/msgpack/version_master.h
-    include/msgpack/zbuffer.h
     include/msgpack/zone.h
 )
 
-IF (NOT MSGPACK_CXX_ONLY)
-    # Only for C library
-    LIST (APPEND msgpackc_HEADERS
-        include/msgpack.h
-        include/msgpack/gcc_atomic.h
-        include/msgpack/pack.h
-        include/msgpack/pack_define.h
-        include/msgpack/pack_template.h
-        include/msgpack/sbuffer.h
-        include/msgpack/timestamp.h
-        include/msgpack/unpack.h
-        include/msgpack/unpack_template.h
-        include/msgpack/util.h
-        include/msgpack/version.h
-        include/msgpack/vrefbuffer.h
-    )
-ENDIF ()
-
-IF (MSGPACK_ENABLE_CXX)
-    # Only for C++ library
-    LIST (APPEND msgpackc_HEADERS
-        include/msgpack.hpp
-        include/msgpack/adaptor/adaptor_base.hpp
-        include/msgpack/adaptor/adaptor_base_decl.hpp
-        include/msgpack/adaptor/array_ref.hpp
-        include/msgpack/adaptor/array_ref_decl.hpp
-        include/msgpack/adaptor/bool.hpp
-        include/msgpack/adaptor/boost/fusion.hpp
-        include/msgpack/adaptor/boost/msgpack_variant.hpp
-        include/msgpack/adaptor/boost/msgpack_variant_decl.hpp
-        include/msgpack/adaptor/boost/optional.hpp
-        include/msgpack/adaptor/boost/string_ref.hpp
-        include/msgpack/adaptor/boost/string_view.hpp
-        include/msgpack/adaptor/carray.hpp
-        include/msgpack/adaptor/char_ptr.hpp
-        include/msgpack/adaptor/check_container_size.hpp
-        include/msgpack/adaptor/check_container_size_decl.hpp
-        include/msgpack/adaptor/cpp11/array.hpp
-        include/msgpack/adaptor/cpp11/array_char.hpp
-        include/msgpack/adaptor/cpp11/array_unsigned_char.hpp
-        include/msgpack/adaptor/cpp11/chrono.hpp
-        include/msgpack/adaptor/cpp11/forward_list.hpp
-        include/msgpack/adaptor/cpp11/reference_wrapper.hpp
-        include/msgpack/adaptor/cpp11/shared_ptr.hpp
-        include/msgpack/adaptor/cpp11/timespec.hpp
-        include/msgpack/adaptor/cpp11/tuple.hpp
-        include/msgpack/adaptor/cpp11/unique_ptr.hpp
-        include/msgpack/adaptor/cpp11/unordered_map.hpp
-        include/msgpack/adaptor/cpp11/unordered_set.hpp
-        include/msgpack/adaptor/cpp17/byte.hpp
-        include/msgpack/adaptor/cpp17/carray_byte.hpp
-        include/msgpack/adaptor/cpp17/optional.hpp
-        include/msgpack/adaptor/cpp17/string_view.hpp
-        include/msgpack/adaptor/cpp17/vector_byte.hpp
-        include/msgpack/adaptor/define.hpp
-        include/msgpack/adaptor/define_decl.hpp
-        include/msgpack/adaptor/deque.hpp
-        include/msgpack/adaptor/ext.hpp
-        include/msgpack/adaptor/ext_decl.hpp
-        include/msgpack/adaptor/fixint.hpp
-        include/msgpack/adaptor/fixint_decl.hpp
-        include/msgpack/adaptor/float.hpp
-        include/msgpack/adaptor/int.hpp
-        include/msgpack/adaptor/int_decl.hpp
-        include/msgpack/adaptor/list.hpp
-        include/msgpack/adaptor/map.hpp
-        include/msgpack/adaptor/map_decl.hpp
-        include/msgpack/adaptor/msgpack_tuple.hpp
-        include/msgpack/adaptor/msgpack_tuple_decl.hpp
-        include/msgpack/adaptor/nil.hpp
-        include/msgpack/adaptor/nil_decl.hpp
-        include/msgpack/adaptor/pair.hpp
-        include/msgpack/adaptor/raw.hpp
-        include/msgpack/adaptor/raw_decl.hpp
-        include/msgpack/adaptor/set.hpp
-        include/msgpack/adaptor/size_equal_only.hpp
-        include/msgpack/adaptor/size_equal_only_decl.hpp
-        include/msgpack/adaptor/string.hpp
-        include/msgpack/adaptor/tr1/unordered_map.hpp
-        include/msgpack/adaptor/tr1/unordered_set.hpp
-        include/msgpack/adaptor/v4raw.hpp
-        include/msgpack/adaptor/v4raw_decl.hpp
-        include/msgpack/adaptor/vector.hpp
-        include/msgpack/adaptor/vector_bool.hpp
-        include/msgpack/adaptor/vector_char.hpp
-        include/msgpack/adaptor/vector_unsigned_char.hpp
-        include/msgpack/adaptor/wstring.hpp
-        include/msgpack/cpp_config.hpp
-        include/msgpack/cpp_config_decl.hpp
-        include/msgpack/create_object_visitor.hpp
-        include/msgpack/create_object_visitor_decl.hpp
-        include/msgpack/fbuffer.hpp
-        include/msgpack/fbuffer_decl.hpp
-        include/msgpack/gcc_atomic.hpp
-        include/msgpack/iterator.hpp
-        include/msgpack/iterator_decl.hpp
-        include/msgpack/meta.hpp
-        include/msgpack/meta_decl.hpp
-        include/msgpack/null_visitor.hpp
-        include/msgpack/null_visitor_decl.hpp
-        include/msgpack/object.hpp
-        include/msgpack/object_decl.hpp
-        include/msgpack/object_fwd.hpp
-        include/msgpack/object_fwd_decl.hpp
-        include/msgpack/pack.hpp
-        include/msgpack/pack_decl.hpp
-        include/msgpack/parse.hpp
-        include/msgpack/parse_decl.hpp
-        include/msgpack/parse_return.hpp
-        include/msgpack/preprocessor.hpp
-        include/msgpack/preprocessor/arithmetic.hpp
-        include/msgpack/preprocessor/arithmetic/add.hpp
-        include/msgpack/preprocessor/arithmetic/dec.hpp
-        include/msgpack/preprocessor/arithmetic/detail/div_base.hpp
-        include/msgpack/preprocessor/arithmetic/div.hpp
-        include/msgpack/preprocessor/arithmetic/inc.hpp
-        include/msgpack/preprocessor/arithmetic/mod.hpp
-        include/msgpack/preprocessor/arithmetic/mul.hpp
-        include/msgpack/preprocessor/arithmetic/sub.hpp
-        include/msgpack/preprocessor/array.hpp
-        include/msgpack/preprocessor/array/data.hpp
-        include/msgpack/preprocessor/array/detail/get_data.hpp
-        include/msgpack/preprocessor/array/elem.hpp
-        include/msgpack/preprocessor/array/enum.hpp
-        include/msgpack/preprocessor/array/insert.hpp
-        include/msgpack/preprocessor/array/pop_back.hpp
-        include/msgpack/preprocessor/array/pop_front.hpp
-        include/msgpack/preprocessor/array/push_back.hpp
-        include/msgpack/preprocessor/array/push_front.hpp
-        include/msgpack/preprocessor/array/remove.hpp
-        include/msgpack/preprocessor/array/replace.hpp
-        include/msgpack/preprocessor/array/reverse.hpp
-        include/msgpack/preprocessor/array/size.hpp
-        include/msgpack/preprocessor/array/to_list.hpp
-        include/msgpack/preprocessor/array/to_seq.hpp
-        include/msgpack/preprocessor/array/to_tuple.hpp
-        include/msgpack/preprocessor/assert_msg.hpp
-        include/msgpack/preprocessor/cat.hpp
-        include/msgpack/preprocessor/comma.hpp
-        include/msgpack/preprocessor/comma_if.hpp
-        include/msgpack/preprocessor/comparison.hpp
-        include/msgpack/preprocessor/comparison/equal.hpp
-        include/msgpack/preprocessor/comparison/greater.hpp
-        include/msgpack/preprocessor/comparison/greater_equal.hpp
-        include/msgpack/preprocessor/comparison/less.hpp
-        include/msgpack/preprocessor/comparison/less_equal.hpp
-        include/msgpack/preprocessor/comparison/not_equal.hpp
-        include/msgpack/preprocessor/config/config.hpp
-        include/msgpack/preprocessor/config/limits.hpp
-        include/msgpack/preprocessor/control.hpp
-        include/msgpack/preprocessor/control/deduce_d.hpp
-        include/msgpack/preprocessor/control/detail/dmc/while.hpp
-        include/msgpack/preprocessor/control/detail/edg/while.hpp
-        include/msgpack/preprocessor/control/detail/msvc/while.hpp
-        include/msgpack/preprocessor/control/detail/while.hpp
-        include/msgpack/preprocessor/control/expr_if.hpp
-        include/msgpack/preprocessor/control/expr_iif.hpp
-        include/msgpack/preprocessor/control/if.hpp
-        include/msgpack/preprocessor/control/iif.hpp
-        include/msgpack/preprocessor/control/while.hpp
-        include/msgpack/preprocessor/debug.hpp
-        include/msgpack/preprocessor/debug/assert.hpp
-        include/msgpack/preprocessor/debug/error.hpp
-        include/msgpack/preprocessor/debug/line.hpp
-        include/msgpack/preprocessor/dec.hpp
-        include/msgpack/preprocessor/detail/auto_rec.hpp
-        include/msgpack/preprocessor/detail/check.hpp
-        include/msgpack/preprocessor/detail/dmc/auto_rec.hpp
-        include/msgpack/preprocessor/detail/is_binary.hpp
-        include/msgpack/preprocessor/detail/is_nullary.hpp
-        include/msgpack/preprocessor/detail/is_unary.hpp
-        include/msgpack/preprocessor/detail/null.hpp
-        include/msgpack/preprocessor/detail/split.hpp
-        include/msgpack/preprocessor/empty.hpp
-        include/msgpack/preprocessor/enum.hpp
-        include/msgpack/preprocessor/enum_params.hpp
-        include/msgpack/preprocessor/enum_params_with_a_default.hpp
-        include/msgpack/preprocessor/enum_params_with_defaults.hpp
-        include/msgpack/preprocessor/enum_shifted.hpp
-        include/msgpack/preprocessor/enum_shifted_params.hpp
-        include/msgpack/preprocessor/expand.hpp
-        include/msgpack/preprocessor/expr_if.hpp
-        include/msgpack/preprocessor/facilities.hpp
-        include/msgpack/preprocessor/facilities/apply.hpp
-        include/msgpack/preprocessor/facilities/detail/is_empty.hpp
-        include/msgpack/preprocessor/facilities/empty.hpp
-        include/msgpack/preprocessor/facilities/expand.hpp
-        include/msgpack/preprocessor/facilities/identity.hpp
-        include/msgpack/preprocessor/facilities/intercept.hpp
-        include/msgpack/preprocessor/facilities/is_1.hpp
-        include/msgpack/preprocessor/facilities/is_empty.hpp
-        include/msgpack/preprocessor/facilities/is_empty_or_1.hpp
-        include/msgpack/preprocessor/facilities/is_empty_variadic.hpp
-        include/msgpack/preprocessor/facilities/overload.hpp
-        include/msgpack/preprocessor/for.hpp
-        include/msgpack/preprocessor/identity.hpp
-        include/msgpack/preprocessor/if.hpp
-        include/msgpack/preprocessor/inc.hpp
-        include/msgpack/preprocessor/iterate.hpp
-        include/msgpack/preprocessor/iteration.hpp
-        include/msgpack/preprocessor/iteration/detail/bounds/lower1.hpp
-        include/msgpack/preprocessor/iteration/detail/bounds/lower2.hpp
-        include/msgpack/preprocessor/iteration/detail/bounds/lower3.hpp
-        include/msgpack/preprocessor/iteration/detail/bounds/lower4.hpp
-        include/msgpack/preprocessor/iteration/detail/bounds/lower5.hpp
-        include/msgpack/preprocessor/iteration/detail/bounds/upper1.hpp
-        include/msgpack/preprocessor/iteration/detail/bounds/upper2.hpp
-        include/msgpack/preprocessor/iteration/detail/bounds/upper3.hpp
-        include/msgpack/preprocessor/iteration/detail/bounds/upper4.hpp
-        include/msgpack/preprocessor/iteration/detail/bounds/upper5.hpp
-        include/msgpack/preprocessor/iteration/detail/finish.hpp
-        include/msgpack/preprocessor/iteration/detail/iter/forward1.hpp
-        include/msgpack/preprocessor/iteration/detail/iter/forward2.hpp
-        include/msgpack/preprocessor/iteration/detail/iter/forward3.hpp
-        include/msgpack/preprocessor/iteration/detail/iter/forward4.hpp
-        include/msgpack/preprocessor/iteration/detail/iter/forward5.hpp
-        include/msgpack/preprocessor/iteration/detail/iter/reverse1.hpp
-        include/msgpack/preprocessor/iteration/detail/iter/reverse2.hpp
-        include/msgpack/preprocessor/iteration/detail/iter/reverse3.hpp
-        include/msgpack/preprocessor/iteration/detail/iter/reverse4.hpp
-        include/msgpack/preprocessor/iteration/detail/iter/reverse5.hpp
-        include/msgpack/preprocessor/iteration/detail/local.hpp
-        include/msgpack/preprocessor/iteration/detail/rlocal.hpp
-        include/msgpack/preprocessor/iteration/detail/self.hpp
-        include/msgpack/preprocessor/iteration/detail/start.hpp
-        include/msgpack/preprocessor/iteration/iterate.hpp
-        include/msgpack/preprocessor/iteration/local.hpp
-        include/msgpack/preprocessor/iteration/self.hpp
-        include/msgpack/preprocessor/library.hpp
-        include/msgpack/preprocessor/limits.hpp
-        include/msgpack/preprocessor/list.hpp
-        include/msgpack/preprocessor/list/adt.hpp
-        include/msgpack/preprocessor/list/append.hpp
-        include/msgpack/preprocessor/list/at.hpp
-        include/msgpack/preprocessor/list/cat.hpp
-        include/msgpack/preprocessor/list/detail/dmc/fold_left.hpp
-        include/msgpack/preprocessor/list/detail/edg/fold_left.hpp
-        include/msgpack/preprocessor/list/detail/edg/fold_right.hpp
-        include/msgpack/preprocessor/list/detail/fold_left.hpp
-        include/msgpack/preprocessor/list/detail/fold_right.hpp
-        include/msgpack/preprocessor/list/enum.hpp
-        include/msgpack/preprocessor/list/filter.hpp
-        include/msgpack/preprocessor/list/first_n.hpp
-        include/msgpack/preprocessor/list/fold_left.hpp
-        include/msgpack/preprocessor/list/fold_right.hpp
-        include/msgpack/preprocessor/list/for_each.hpp
-        include/msgpack/preprocessor/list/for_each_i.hpp
-        include/msgpack/preprocessor/list/for_each_product.hpp
-        include/msgpack/preprocessor/list/rest_n.hpp
-        include/msgpack/preprocessor/list/reverse.hpp
-        include/msgpack/preprocessor/list/size.hpp
-        include/msgpack/preprocessor/list/to_array.hpp
-        include/msgpack/preprocessor/list/to_seq.hpp
-        include/msgpack/preprocessor/list/to_tuple.hpp
-        include/msgpack/preprocessor/list/transform.hpp
-        include/msgpack/preprocessor/logical.hpp
-        include/msgpack/preprocessor/logical/and.hpp
-        include/msgpack/preprocessor/logical/bitand.hpp
-        include/msgpack/preprocessor/logical/bitnor.hpp
-        include/msgpack/preprocessor/logical/bitor.hpp
-        include/msgpack/preprocessor/logical/bitxor.hpp
-        include/msgpack/preprocessor/logical/bool.hpp
-        include/msgpack/preprocessor/logical/compl.hpp
-        include/msgpack/preprocessor/logical/nor.hpp
-        include/msgpack/preprocessor/logical/not.hpp
-        include/msgpack/preprocessor/logical/or.hpp
-        include/msgpack/preprocessor/logical/xor.hpp
-        include/msgpack/preprocessor/max.hpp
-        include/msgpack/preprocessor/min.hpp
-        include/msgpack/preprocessor/punctuation.hpp
-        include/msgpack/preprocessor/punctuation/comma.hpp
-        include/msgpack/preprocessor/punctuation/comma_if.hpp
-        include/msgpack/preprocessor/punctuation/detail/is_begin_parens.hpp
-        include/msgpack/preprocessor/punctuation/is_begin_parens.hpp
-        include/msgpack/preprocessor/punctuation/paren.hpp
-        include/msgpack/preprocessor/punctuation/paren_if.hpp
-        include/msgpack/preprocessor/punctuation/remove_parens.hpp
-        include/msgpack/preprocessor/repeat.hpp
-        include/msgpack/preprocessor/repeat_2nd.hpp
-        include/msgpack/preprocessor/repeat_3rd.hpp
-        include/msgpack/preprocessor/repeat_from_to.hpp
-        include/msgpack/preprocessor/repeat_from_to_2nd.hpp
-        include/msgpack/preprocessor/repeat_from_to_3rd.hpp
-        include/msgpack/preprocessor/repetition.hpp
-        include/msgpack/preprocessor/repetition/deduce_r.hpp
-        include/msgpack/preprocessor/repetition/deduce_z.hpp
-        include/msgpack/preprocessor/repetition/detail/dmc/for.hpp
-        include/msgpack/preprocessor/repetition/detail/edg/for.hpp
-        include/msgpack/preprocessor/repetition/detail/for.hpp
-        include/msgpack/preprocessor/repetition/detail/msvc/for.hpp
-        include/msgpack/preprocessor/repetition/enum.hpp
-        include/msgpack/preprocessor/repetition/enum_binary_params.hpp
-        include/msgpack/preprocessor/repetition/enum_params.hpp
-        include/msgpack/preprocessor/repetition/enum_params_with_a_default.hpp
-        include/msgpack/preprocessor/repetition/enum_params_with_defaults.hpp
-        include/msgpack/preprocessor/repetition/enum_shifted.hpp
-        include/msgpack/preprocessor/repetition/enum_shifted_binary_params.hpp
-        include/msgpack/preprocessor/repetition/enum_shifted_params.hpp
-        include/msgpack/preprocessor/repetition/enum_trailing.hpp
-        include/msgpack/preprocessor/repetition/enum_trailing_binary_params.hpp
-        include/msgpack/preprocessor/repetition/enum_trailing_params.hpp
-        include/msgpack/preprocessor/repetition/for.hpp
-        include/msgpack/preprocessor/repetition/repeat.hpp
-        include/msgpack/preprocessor/repetition/repeat_from_to.hpp
-        include/msgpack/preprocessor/selection.hpp
-        include/msgpack/preprocessor/selection/max.hpp
-        include/msgpack/preprocessor/selection/min.hpp
-        include/msgpack/preprocessor/seq.hpp
-        include/msgpack/preprocessor/seq/cat.hpp
-        include/msgpack/preprocessor/seq/detail/binary_transform.hpp
-        include/msgpack/preprocessor/seq/detail/is_empty.hpp
-        include/msgpack/preprocessor/seq/detail/split.hpp
-        include/msgpack/preprocessor/seq/detail/to_list_msvc.hpp
-        include/msgpack/preprocessor/seq/elem.hpp
-        include/msgpack/preprocessor/seq/enum.hpp
-        include/msgpack/preprocessor/seq/filter.hpp
-        include/msgpack/preprocessor/seq/first_n.hpp
-        include/msgpack/preprocessor/seq/fold_left.hpp
-        include/msgpack/preprocessor/seq/fold_right.hpp
-        include/msgpack/preprocessor/seq/for_each.hpp
-        include/msgpack/preprocessor/seq/for_each_i.hpp
-        include/msgpack/preprocessor/seq/for_each_product.hpp
-        include/msgpack/preprocessor/seq/insert.hpp
-        include/msgpack/preprocessor/seq/pop_back.hpp
-        include/msgpack/preprocessor/seq/pop_front.hpp
-        include/msgpack/preprocessor/seq/push_back.hpp
-        include/msgpack/preprocessor/seq/push_front.hpp
-        include/msgpack/preprocessor/seq/remove.hpp
-        include/msgpack/preprocessor/seq/replace.hpp
-        include/msgpack/preprocessor/seq/rest_n.hpp
-        include/msgpack/preprocessor/seq/reverse.hpp
-        include/msgpack/preprocessor/seq/seq.hpp
-        include/msgpack/preprocessor/seq/size.hpp
-        include/msgpack/preprocessor/seq/subseq.hpp
-        include/msgpack/preprocessor/seq/to_array.hpp
-        include/msgpack/preprocessor/seq/to_list.hpp
-        include/msgpack/preprocessor/seq/to_tuple.hpp
-        include/msgpack/preprocessor/seq/transform.hpp
-        include/msgpack/preprocessor/seq/variadic_seq_to_seq.hpp
-        include/msgpack/preprocessor/slot.hpp
-        include/msgpack/preprocessor/slot/counter.hpp
-        include/msgpack/preprocessor/slot/detail/counter.hpp
-        include/msgpack/preprocessor/slot/detail/def.hpp
-        include/msgpack/preprocessor/slot/detail/shared.hpp
-        include/msgpack/preprocessor/slot/detail/slot1.hpp
-        include/msgpack/preprocessor/slot/detail/slot2.hpp
-        include/msgpack/preprocessor/slot/detail/slot3.hpp
-        include/msgpack/preprocessor/slot/detail/slot4.hpp
-        include/msgpack/preprocessor/slot/detail/slot5.hpp
-        include/msgpack/preprocessor/slot/slot.hpp
-        include/msgpack/preprocessor/stringize.hpp
-        include/msgpack/preprocessor/tuple.hpp
-        include/msgpack/preprocessor/tuple/detail/is_single_return.hpp
-        include/msgpack/preprocessor/tuple/eat.hpp
-        include/msgpack/preprocessor/tuple/elem.hpp
-        include/msgpack/preprocessor/tuple/enum.hpp
-        include/msgpack/preprocessor/tuple/insert.hpp
-        include/msgpack/preprocessor/tuple/pop_back.hpp
-        include/msgpack/preprocessor/tuple/pop_front.hpp
-        include/msgpack/preprocessor/tuple/push_back.hpp
-        include/msgpack/preprocessor/tuple/push_front.hpp
-        include/msgpack/preprocessor/tuple/rem.hpp
-        include/msgpack/preprocessor/tuple/remove.hpp
-        include/msgpack/preprocessor/tuple/replace.hpp
-        include/msgpack/preprocessor/tuple/reverse.hpp
-        include/msgpack/preprocessor/tuple/size.hpp
-        include/msgpack/preprocessor/tuple/to_array.hpp
-        include/msgpack/preprocessor/tuple/to_list.hpp
-        include/msgpack/preprocessor/tuple/to_seq.hpp
-        include/msgpack/preprocessor/variadic.hpp
-        include/msgpack/preprocessor/variadic/detail/is_single_return.hpp
-        include/msgpack/preprocessor/variadic/elem.hpp
-        include/msgpack/preprocessor/variadic/size.hpp
-        include/msgpack/preprocessor/variadic/to_array.hpp
-        include/msgpack/preprocessor/variadic/to_list.hpp
-        include/msgpack/preprocessor/variadic/to_seq.hpp
-        include/msgpack/preprocessor/variadic/to_tuple.hpp
-        include/msgpack/preprocessor/while.hpp
-        include/msgpack/preprocessor/wstringize.hpp
-        include/msgpack/sbuffer.hpp
-        include/msgpack/sbuffer_decl.hpp
-        include/msgpack/type.hpp
-        include/msgpack/unpack.hpp
-        include/msgpack/unpack_decl.hpp
-        include/msgpack/unpack_exception.hpp
-        include/msgpack/v1/adaptor/adaptor_base.hpp
-        include/msgpack/v1/adaptor/adaptor_base_decl.hpp
-        include/msgpack/v1/adaptor/array_ref.hpp
-        include/msgpack/v1/adaptor/array_ref_decl.hpp
-        include/msgpack/v1/adaptor/bool.hpp
-        include/msgpack/v1/adaptor/boost/fusion.hpp
-        include/msgpack/v1/adaptor/boost/msgpack_variant.hpp
-        include/msgpack/v1/adaptor/boost/msgpack_variant_decl.hpp
-        include/msgpack/v1/adaptor/boost/optional.hpp
-        include/msgpack/v1/adaptor/boost/string_ref.hpp
-        include/msgpack/v1/adaptor/boost/string_view.hpp
-        include/msgpack/v1/adaptor/carray.hpp
-        include/msgpack/v1/adaptor/char_ptr.hpp
-        include/msgpack/v1/adaptor/check_container_size.hpp
-        include/msgpack/v1/adaptor/check_container_size_decl.hpp
-        include/msgpack/v1/adaptor/cpp11/array.hpp
-        include/msgpack/v1/adaptor/cpp11/array_char.hpp
-        include/msgpack/v1/adaptor/cpp11/array_unsigned_char.hpp
-        include/msgpack/v1/adaptor/cpp11/chrono.hpp
-        include/msgpack/v1/adaptor/cpp11/forward_list.hpp
-        include/msgpack/v1/adaptor/cpp11/reference_wrapper.hpp
-        include/msgpack/v1/adaptor/cpp11/shared_ptr.hpp
-        include/msgpack/v1/adaptor/cpp11/timespec.hpp
-        include/msgpack/v1/adaptor/cpp11/tuple.hpp
-        include/msgpack/v1/adaptor/cpp11/unique_ptr.hpp
-        include/msgpack/v1/adaptor/cpp11/unordered_map.hpp
-        include/msgpack/v1/adaptor/cpp11/unordered_set.hpp
-        include/msgpack/v1/adaptor/cpp17/byte.hpp
-        include/msgpack/v1/adaptor/cpp17/carray_byte.hpp
-        include/msgpack/v1/adaptor/cpp17/optional.hpp
-        include/msgpack/v1/adaptor/cpp17/string_view.hpp
-        include/msgpack/v1/adaptor/cpp17/vector_byte.hpp
-        include/msgpack/v1/adaptor/define.hpp
-        include/msgpack/v1/adaptor/define_decl.hpp
-        include/msgpack/v1/adaptor/deque.hpp
-        include/msgpack/v1/adaptor/detail/cpp03_define_array.hpp
-        include/msgpack/v1/adaptor/detail/cpp03_define_array_decl.hpp
-        include/msgpack/v1/adaptor/detail/cpp03_define_map.hpp
-        include/msgpack/v1/adaptor/detail/cpp03_define_map_decl.hpp
-        include/msgpack/v1/adaptor/detail/cpp03_msgpack_tuple.hpp
-        include/msgpack/v1/adaptor/detail/cpp03_msgpack_tuple_decl.hpp
-        include/msgpack/v1/adaptor/detail/cpp11_convert_helper.hpp
-        include/msgpack/v1/adaptor/detail/cpp11_define_array.hpp
-        include/msgpack/v1/adaptor/detail/cpp11_define_array_decl.hpp
-        include/msgpack/v1/adaptor/detail/cpp11_define_map.hpp
-        include/msgpack/v1/adaptor/detail/cpp11_define_map_decl.hpp
-        include/msgpack/v1/adaptor/detail/cpp11_msgpack_tuple.hpp
-        include/msgpack/v1/adaptor/detail/cpp11_msgpack_tuple_decl.hpp
-        include/msgpack/v1/adaptor/ext.hpp
-        include/msgpack/v1/adaptor/ext_decl.hpp
-        include/msgpack/v1/adaptor/fixint.hpp
-        include/msgpack/v1/adaptor/fixint_decl.hpp
-        include/msgpack/v1/adaptor/float.hpp
-        include/msgpack/v1/adaptor/int.hpp
-        include/msgpack/v1/adaptor/int_decl.hpp
-        include/msgpack/v1/adaptor/list.hpp
-        include/msgpack/v1/adaptor/map.hpp
-        include/msgpack/v1/adaptor/map_decl.hpp
-        include/msgpack/v1/adaptor/msgpack_tuple.hpp
-        include/msgpack/v1/adaptor/msgpack_tuple_decl.hpp
-        include/msgpack/v1/adaptor/nil.hpp
-        include/msgpack/v1/adaptor/nil_decl.hpp
-        include/msgpack/v1/adaptor/pair.hpp
-        include/msgpack/v1/adaptor/raw.hpp
-        include/msgpack/v1/adaptor/raw_decl.hpp
-        include/msgpack/v1/adaptor/set.hpp
-        include/msgpack/v1/adaptor/size_equal_only.hpp
-        include/msgpack/v1/adaptor/size_equal_only_decl.hpp
-        include/msgpack/v1/adaptor/string.hpp
-        include/msgpack/v1/adaptor/tr1/unordered_map.hpp
-        include/msgpack/v1/adaptor/tr1/unordered_set.hpp
-        include/msgpack/v1/adaptor/v4raw.hpp
-        include/msgpack/v1/adaptor/v4raw_decl.hpp
-        include/msgpack/v1/adaptor/vector.hpp
-        include/msgpack/v1/adaptor/vector_bool.hpp
-        include/msgpack/v1/adaptor/vector_char.hpp
-        include/msgpack/v1/adaptor/vector_unsigned_char.hpp
-        include/msgpack/v1/adaptor/wstring.hpp
-        include/msgpack/v1/cpp_config.hpp
-        include/msgpack/v1/cpp_config_decl.hpp
-        include/msgpack/v1/detail/cpp03_zone.hpp
-        include/msgpack/v1/detail/cpp03_zone_decl.hpp
-        include/msgpack/v1/detail/cpp11_zone.hpp
-        include/msgpack/v1/detail/cpp11_zone_decl.hpp
-        include/msgpack/v1/fbuffer.hpp
-        include/msgpack/v1/fbuffer_decl.hpp
-        include/msgpack/v1/iterator.hpp
-        include/msgpack/v1/iterator_decl.hpp
-        include/msgpack/v1/meta.hpp
-        include/msgpack/v1/meta_decl.hpp
-        include/msgpack/v1/object.hpp
-        include/msgpack/v1/object_decl.hpp
-        include/msgpack/v1/object_fwd.hpp
-        include/msgpack/v1/object_fwd_decl.hpp
-        include/msgpack/v1/pack.hpp
-        include/msgpack/v1/pack_decl.hpp
-        include/msgpack/v1/parse_return.hpp
-        include/msgpack/v1/preprocessor.hpp
-        include/msgpack/v1/sbuffer.hpp
-        include/msgpack/v1/sbuffer_decl.hpp
-        include/msgpack/v1/unpack.hpp
-        include/msgpack/v1/unpack_decl.hpp
-        include/msgpack/v1/unpack_exception.hpp
-        include/msgpack/v1/version.hpp
-        include/msgpack/v1/versioning.hpp
-        include/msgpack/v1/vrefbuffer.hpp
-        include/msgpack/v1/vrefbuffer_decl.hpp
-        include/msgpack/v1/zbuffer.hpp
-        include/msgpack/v1/zbuffer_decl.hpp
-        include/msgpack/v1/zone.hpp
-        include/msgpack/v1/zone_decl.hpp
-        include/msgpack/v2/adaptor/adaptor_base.hpp
-        include/msgpack/v2/adaptor/adaptor_base_decl.hpp
-        include/msgpack/v2/adaptor/array_ref_decl.hpp
-        include/msgpack/v2/adaptor/boost/msgpack_variant_decl.hpp
-        include/msgpack/v2/adaptor/check_container_size_decl.hpp
-        include/msgpack/v2/adaptor/define_decl.hpp
-        include/msgpack/v2/adaptor/detail/cpp03_define_array_decl.hpp
-        include/msgpack/v2/adaptor/detail/cpp03_define_map_decl.hpp
-        include/msgpack/v2/adaptor/detail/cpp03_msgpack_tuple_decl.hpp
-        include/msgpack/v2/adaptor/detail/cpp11_define_array_decl.hpp
-        include/msgpack/v2/adaptor/detail/cpp11_define_map_decl.hpp
-        include/msgpack/v2/adaptor/detail/cpp11_msgpack_tuple_decl.hpp
-        include/msgpack/v2/adaptor/ext_decl.hpp
-        include/msgpack/v2/adaptor/fixint_decl.hpp
-        include/msgpack/v2/adaptor/int_decl.hpp
-        include/msgpack/v2/adaptor/map_decl.hpp
-        include/msgpack/v2/adaptor/msgpack_tuple_decl.hpp
-        include/msgpack/v2/adaptor/nil_decl.hpp
-        include/msgpack/v2/adaptor/raw_decl.hpp
-        include/msgpack/v2/adaptor/size_equal_only_decl.hpp
-        include/msgpack/v2/adaptor/v4raw_decl.hpp
-        include/msgpack/v2/cpp_config_decl.hpp
-        include/msgpack/v2/create_object_visitor.hpp
-        include/msgpack/v2/create_object_visitor_decl.hpp
-        include/msgpack/v2/detail/cpp03_zone_decl.hpp
-        include/msgpack/v2/detail/cpp11_zone_decl.hpp
-        include/msgpack/v2/fbuffer_decl.hpp
-        include/msgpack/v2/iterator_decl.hpp
-        include/msgpack/v2/meta_decl.hpp
-        include/msgpack/v2/null_visitor.hpp
-        include/msgpack/v2/null_visitor_decl.hpp
-        include/msgpack/v2/object.hpp
-        include/msgpack/v2/object_decl.hpp
-        include/msgpack/v2/object_fwd.hpp
-        include/msgpack/v2/object_fwd_decl.hpp
-        include/msgpack/v2/pack_decl.hpp
-        include/msgpack/v2/parse.hpp
-        include/msgpack/v2/parse_decl.hpp
-        include/msgpack/v2/parse_return.hpp
-        include/msgpack/v2/sbuffer_decl.hpp
-        include/msgpack/v2/unpack.hpp
-        include/msgpack/v2/unpack_decl.hpp
-        include/msgpack/v2/vrefbuffer_decl.hpp
-        include/msgpack/v2/x3_parse.hpp
-        include/msgpack/v2/x3_parse_decl.hpp
-        include/msgpack/v2/x3_unpack.hpp
-        include/msgpack/v2/x3_unpack_decl.hpp
-        include/msgpack/v2/zbuffer_decl.hpp
-        include/msgpack/v2/zone_decl.hpp
-        include/msgpack/v3/adaptor/adaptor_base.hpp
-        include/msgpack/v3/adaptor/adaptor_base_decl.hpp
-        include/msgpack/v3/adaptor/array_ref_decl.hpp
-        include/msgpack/v3/adaptor/boost/msgpack_variant_decl.hpp
-        include/msgpack/v3/adaptor/check_container_size_decl.hpp
-        include/msgpack/v3/adaptor/define_decl.hpp
-        include/msgpack/v3/adaptor/detail/cpp03_define_array_decl.hpp
-        include/msgpack/v3/adaptor/detail/cpp03_define_map_decl.hpp
-        include/msgpack/v3/adaptor/detail/cpp03_msgpack_tuple_decl.hpp
-        include/msgpack/v3/adaptor/detail/cpp11_define_array_decl.hpp
-        include/msgpack/v3/adaptor/detail/cpp11_define_map_decl.hpp
-        include/msgpack/v3/adaptor/detail/cpp11_msgpack_tuple_decl.hpp
-        include/msgpack/v3/adaptor/ext_decl.hpp
-        include/msgpack/v3/adaptor/fixint_decl.hpp
-        include/msgpack/v3/adaptor/int_decl.hpp
-        include/msgpack/v3/adaptor/map_decl.hpp
-        include/msgpack/v3/adaptor/msgpack_tuple_decl.hpp
-        include/msgpack/v3/adaptor/nil_decl.hpp
-        include/msgpack/v3/adaptor/raw_decl.hpp
-        include/msgpack/v3/adaptor/size_equal_only_decl.hpp
-        include/msgpack/v3/adaptor/v4raw_decl.hpp
-        include/msgpack/v3/cpp_config_decl.hpp
-        include/msgpack/v3/create_object_visitor_decl.hpp
-        include/msgpack/v3/detail/cpp03_zone_decl.hpp
-        include/msgpack/v3/detail/cpp11_zone_decl.hpp
-        include/msgpack/v3/fbuffer_decl.hpp
-        include/msgpack/v3/iterator_decl.hpp
-        include/msgpack/v3/meta_decl.hpp
-        include/msgpack/v3/null_visitor_decl.hpp
-        include/msgpack/v3/object_decl.hpp
-        include/msgpack/v3/object_fwd.hpp
-        include/msgpack/v3/object_fwd_decl.hpp
-        include/msgpack/v3/pack_decl.hpp
-        include/msgpack/v3/parse.hpp
-        include/msgpack/v3/parse_decl.hpp
-        include/msgpack/v3/parse_return.hpp
-        include/msgpack/v3/sbuffer_decl.hpp
-        include/msgpack/v3/unpack.hpp
-        include/msgpack/v3/unpack_decl.hpp
-        include/msgpack/v3/vrefbuffer_decl.hpp
-        include/msgpack/v3/x3_parse_decl.hpp
-        include/msgpack/v3/x3_unpack.hpp
-        include/msgpack/v3/x3_unpack_decl.hpp
-        include/msgpack/v3/zbuffer_decl.hpp
-        include/msgpack/v3/zone_decl.hpp
-        include/msgpack/version.hpp
-        include/msgpack/versioning.hpp
-        include/msgpack/vrefbuffer.hpp
-        include/msgpack/vrefbuffer_decl.hpp
-        include/msgpack/x3_parse.hpp
-        include/msgpack/x3_parse_decl.hpp
-        include/msgpack/x3_unpack.hpp
-        include/msgpack/x3_unpack_decl.hpp
-        include/msgpack/zbuffer.hpp
-        include/msgpack/zbuffer_decl.hpp
-        include/msgpack/zone.hpp
-        include/msgpack/zone_decl.hpp
-    )
-ENDIF ()
+# .hpp files
+LIST (APPEND msgpackc_HEADERS
+    include/msgpack.hpp
+    include/msgpack/adaptor/adaptor_base.hpp
+    include/msgpack/adaptor/adaptor_base_decl.hpp
+    include/msgpack/adaptor/array_ref.hpp
+    include/msgpack/adaptor/array_ref_decl.hpp
+    include/msgpack/adaptor/bool.hpp
+    include/msgpack/adaptor/boost/fusion.hpp
+    include/msgpack/adaptor/boost/msgpack_variant.hpp
+    include/msgpack/adaptor/boost/msgpack_variant_decl.hpp
+    include/msgpack/adaptor/boost/optional.hpp
+    include/msgpack/adaptor/boost/string_ref.hpp
+    include/msgpack/adaptor/boost/string_view.hpp
+    include/msgpack/adaptor/carray.hpp
+    include/msgpack/adaptor/char_ptr.hpp
+    include/msgpack/adaptor/check_container_size.hpp
+    include/msgpack/adaptor/check_container_size_decl.hpp
+    include/msgpack/adaptor/cpp11/array.hpp
+    include/msgpack/adaptor/cpp11/array_char.hpp
+    include/msgpack/adaptor/cpp11/array_unsigned_char.hpp
+    include/msgpack/adaptor/cpp11/chrono.hpp
+    include/msgpack/adaptor/cpp11/forward_list.hpp
+    include/msgpack/adaptor/cpp11/reference_wrapper.hpp
+    include/msgpack/adaptor/cpp11/shared_ptr.hpp
+    include/msgpack/adaptor/cpp11/timespec.hpp
+    include/msgpack/adaptor/cpp11/tuple.hpp
+    include/msgpack/adaptor/cpp11/unique_ptr.hpp
+    include/msgpack/adaptor/cpp11/unordered_map.hpp
+    include/msgpack/adaptor/cpp11/unordered_set.hpp
+    include/msgpack/adaptor/cpp17/byte.hpp
+    include/msgpack/adaptor/cpp17/carray_byte.hpp
+    include/msgpack/adaptor/cpp17/optional.hpp
+    include/msgpack/adaptor/cpp17/string_view.hpp
+    include/msgpack/adaptor/cpp17/vector_byte.hpp
+    include/msgpack/adaptor/define.hpp
+    include/msgpack/adaptor/define_decl.hpp
+    include/msgpack/adaptor/deque.hpp
+    include/msgpack/adaptor/ext.hpp
+    include/msgpack/adaptor/ext_decl.hpp
+    include/msgpack/adaptor/fixint.hpp
+    include/msgpack/adaptor/fixint_decl.hpp
+    include/msgpack/adaptor/float.hpp
+    include/msgpack/adaptor/int.hpp
+    include/msgpack/adaptor/int_decl.hpp
+    include/msgpack/adaptor/list.hpp
+    include/msgpack/adaptor/map.hpp
+    include/msgpack/adaptor/map_decl.hpp
+    include/msgpack/adaptor/msgpack_tuple.hpp
+    include/msgpack/adaptor/msgpack_tuple_decl.hpp
+    include/msgpack/adaptor/nil.hpp
+    include/msgpack/adaptor/nil_decl.hpp
+    include/msgpack/adaptor/pair.hpp
+    include/msgpack/adaptor/raw.hpp
+    include/msgpack/adaptor/raw_decl.hpp
+    include/msgpack/adaptor/set.hpp
+    include/msgpack/adaptor/size_equal_only.hpp
+    include/msgpack/adaptor/size_equal_only_decl.hpp
+    include/msgpack/adaptor/string.hpp
+    include/msgpack/adaptor/tr1/unordered_map.hpp
+    include/msgpack/adaptor/tr1/unordered_set.hpp
+    include/msgpack/adaptor/v4raw.hpp
+    include/msgpack/adaptor/v4raw_decl.hpp
+    include/msgpack/adaptor/vector.hpp
+    include/msgpack/adaptor/vector_bool.hpp
+    include/msgpack/adaptor/vector_char.hpp
+    include/msgpack/adaptor/vector_unsigned_char.hpp
+    include/msgpack/adaptor/wstring.hpp
+    include/msgpack/cpp_config.hpp
+    include/msgpack/cpp_config_decl.hpp
+    include/msgpack/create_object_visitor.hpp
+    include/msgpack/create_object_visitor_decl.hpp
+    include/msgpack/fbuffer.hpp
+    include/msgpack/fbuffer_decl.hpp
+    include/msgpack/gcc_atomic.hpp
+    include/msgpack/iterator.hpp
+    include/msgpack/iterator_decl.hpp
+    include/msgpack/meta.hpp
+    include/msgpack/meta_decl.hpp
+    include/msgpack/null_visitor.hpp
+    include/msgpack/null_visitor_decl.hpp
+    include/msgpack/object.hpp
+    include/msgpack/object_decl.hpp
+    include/msgpack/object_fwd.hpp
+    include/msgpack/object_fwd_decl.hpp
+    include/msgpack/pack.hpp
+    include/msgpack/pack_decl.hpp
+    include/msgpack/parse.hpp
+    include/msgpack/parse_decl.hpp
+    include/msgpack/parse_return.hpp
+    include/msgpack/sbuffer.hpp
+    include/msgpack/sbuffer_decl.hpp
+    include/msgpack/type.hpp
+    include/msgpack/unpack.hpp
+    include/msgpack/unpack_decl.hpp
+    include/msgpack/unpack_exception.hpp
+    include/msgpack/v1/adaptor/adaptor_base.hpp
+    include/msgpack/v1/adaptor/adaptor_base_decl.hpp
+    include/msgpack/v1/adaptor/array_ref.hpp
+    include/msgpack/v1/adaptor/array_ref_decl.hpp
+    include/msgpack/v1/adaptor/bool.hpp
+    include/msgpack/v1/adaptor/boost/fusion.hpp
+    include/msgpack/v1/adaptor/boost/msgpack_variant.hpp
+    include/msgpack/v1/adaptor/boost/msgpack_variant_decl.hpp
+    include/msgpack/v1/adaptor/boost/optional.hpp
+    include/msgpack/v1/adaptor/boost/string_ref.hpp
+    include/msgpack/v1/adaptor/boost/string_view.hpp
+    include/msgpack/v1/adaptor/carray.hpp
+    include/msgpack/v1/adaptor/char_ptr.hpp
+    include/msgpack/v1/adaptor/check_container_size.hpp
+    include/msgpack/v1/adaptor/check_container_size_decl.hpp
+    include/msgpack/v1/adaptor/cpp11/array.hpp
+    include/msgpack/v1/adaptor/cpp11/array_char.hpp
+    include/msgpack/v1/adaptor/cpp11/array_unsigned_char.hpp
+    include/msgpack/v1/adaptor/cpp11/chrono.hpp
+    include/msgpack/v1/adaptor/cpp11/forward_list.hpp
+    include/msgpack/v1/adaptor/cpp11/reference_wrapper.hpp
+    include/msgpack/v1/adaptor/cpp11/shared_ptr.hpp
+    include/msgpack/v1/adaptor/cpp11/timespec.hpp
+    include/msgpack/v1/adaptor/cpp11/tuple.hpp
+    include/msgpack/v1/adaptor/cpp11/unique_ptr.hpp
+    include/msgpack/v1/adaptor/cpp11/unordered_map.hpp
+    include/msgpack/v1/adaptor/cpp11/unordered_set.hpp
+    include/msgpack/v1/adaptor/cpp17/byte.hpp
+    include/msgpack/v1/adaptor/cpp17/carray_byte.hpp
+    include/msgpack/v1/adaptor/cpp17/optional.hpp
+    include/msgpack/v1/adaptor/cpp17/string_view.hpp
+    include/msgpack/v1/adaptor/cpp17/vector_byte.hpp
+    include/msgpack/v1/adaptor/define.hpp
+    include/msgpack/v1/adaptor/define_decl.hpp
+    include/msgpack/v1/adaptor/deque.hpp
+    include/msgpack/v1/adaptor/detail/cpp03_define_array.hpp
+    include/msgpack/v1/adaptor/detail/cpp03_define_array_decl.hpp
+    include/msgpack/v1/adaptor/detail/cpp03_define_map.hpp
+    include/msgpack/v1/adaptor/detail/cpp03_define_map_decl.hpp
+    include/msgpack/v1/adaptor/detail/cpp03_msgpack_tuple.hpp
+    include/msgpack/v1/adaptor/detail/cpp03_msgpack_tuple_decl.hpp
+    include/msgpack/v1/adaptor/detail/cpp11_convert_helper.hpp
+    include/msgpack/v1/adaptor/detail/cpp11_define_array.hpp
+    include/msgpack/v1/adaptor/detail/cpp11_define_array_decl.hpp
+    include/msgpack/v1/adaptor/detail/cpp11_define_map.hpp
+    include/msgpack/v1/adaptor/detail/cpp11_define_map_decl.hpp
+    include/msgpack/v1/adaptor/detail/cpp11_msgpack_tuple.hpp
+    include/msgpack/v1/adaptor/detail/cpp11_msgpack_tuple_decl.hpp
+    include/msgpack/v1/adaptor/ext.hpp
+    include/msgpack/v1/adaptor/ext_decl.hpp
+    include/msgpack/v1/adaptor/fixint.hpp
+    include/msgpack/v1/adaptor/fixint_decl.hpp
+    include/msgpack/v1/adaptor/float.hpp
+    include/msgpack/v1/adaptor/int.hpp
+    include/msgpack/v1/adaptor/int_decl.hpp
+    include/msgpack/v1/adaptor/list.hpp
+    include/msgpack/v1/adaptor/map.hpp
+    include/msgpack/v1/adaptor/map_decl.hpp
+    include/msgpack/v1/adaptor/msgpack_tuple.hpp
+    include/msgpack/v1/adaptor/msgpack_tuple_decl.hpp
+    include/msgpack/v1/adaptor/nil.hpp
+    include/msgpack/v1/adaptor/nil_decl.hpp
+    include/msgpack/v1/adaptor/pair.hpp
+    include/msgpack/v1/adaptor/raw.hpp
+    include/msgpack/v1/adaptor/raw_decl.hpp
+    include/msgpack/v1/adaptor/set.hpp
+    include/msgpack/v1/adaptor/size_equal_only.hpp
+    include/msgpack/v1/adaptor/size_equal_only_decl.hpp
+    include/msgpack/v1/adaptor/string.hpp
+    include/msgpack/v1/adaptor/tr1/unordered_map.hpp
+    include/msgpack/v1/adaptor/tr1/unordered_set.hpp
+    include/msgpack/v1/adaptor/v4raw.hpp
+    include/msgpack/v1/adaptor/v4raw_decl.hpp
+    include/msgpack/v1/adaptor/vector.hpp
+    include/msgpack/v1/adaptor/vector_bool.hpp
+    include/msgpack/v1/adaptor/vector_char.hpp
+    include/msgpack/v1/adaptor/vector_unsigned_char.hpp
+    include/msgpack/v1/adaptor/wstring.hpp
+    include/msgpack/v1/cpp_config.hpp
+    include/msgpack/v1/cpp_config_decl.hpp
+    include/msgpack/v1/detail/cpp03_zone.hpp
+    include/msgpack/v1/detail/cpp03_zone_decl.hpp
+    include/msgpack/v1/detail/cpp11_zone.hpp
+    include/msgpack/v1/detail/cpp11_zone_decl.hpp
+    include/msgpack/v1/fbuffer.hpp
+    include/msgpack/v1/fbuffer_decl.hpp
+    include/msgpack/v1/iterator.hpp
+    include/msgpack/v1/iterator_decl.hpp
+    include/msgpack/v1/meta.hpp
+    include/msgpack/v1/meta_decl.hpp
+    include/msgpack/v1/object.hpp
+    include/msgpack/v1/object_decl.hpp
+    include/msgpack/v1/object_fwd.hpp
+    include/msgpack/v1/object_fwd_decl.hpp
+    include/msgpack/v1/pack.hpp
+    include/msgpack/v1/pack_decl.hpp
+    include/msgpack/v1/parse_return.hpp
+    include/msgpack/v1/preprocessor.hpp
+    include/msgpack/v1/sbuffer.hpp
+    include/msgpack/v1/sbuffer_decl.hpp
+    include/msgpack/v1/unpack.hpp
+    include/msgpack/v1/unpack_decl.hpp
+    include/msgpack/v1/unpack_exception.hpp
+    include/msgpack/v1/version.hpp
+    include/msgpack/v1/versioning.hpp
+    include/msgpack/v1/vrefbuffer.hpp
+    include/msgpack/v1/vrefbuffer_decl.hpp
+    include/msgpack/v1/zbuffer.hpp
+    include/msgpack/v1/zbuffer_decl.hpp
+    include/msgpack/v1/zone.hpp
+    include/msgpack/v1/zone_decl.hpp
+    include/msgpack/v2/adaptor/adaptor_base.hpp
+    include/msgpack/v2/adaptor/adaptor_base_decl.hpp
+    include/msgpack/v2/adaptor/array_ref_decl.hpp
+    include/msgpack/v2/adaptor/boost/msgpack_variant_decl.hpp
+    include/msgpack/v2/adaptor/check_container_size_decl.hpp
+    include/msgpack/v2/adaptor/define_decl.hpp
+    include/msgpack/v2/adaptor/detail/cpp03_define_array_decl.hpp
+    include/msgpack/v2/adaptor/detail/cpp03_define_map_decl.hpp
+    include/msgpack/v2/adaptor/detail/cpp03_msgpack_tuple_decl.hpp
+    include/msgpack/v2/adaptor/detail/cpp11_define_array_decl.hpp
+    include/msgpack/v2/adaptor/detail/cpp11_define_map_decl.hpp
+    include/msgpack/v2/adaptor/detail/cpp11_msgpack_tuple_decl.hpp
+    include/msgpack/v2/adaptor/ext_decl.hpp
+    include/msgpack/v2/adaptor/fixint_decl.hpp
+    include/msgpack/v2/adaptor/int_decl.hpp
+    include/msgpack/v2/adaptor/map_decl.hpp
+    include/msgpack/v2/adaptor/msgpack_tuple_decl.hpp
+    include/msgpack/v2/adaptor/nil_decl.hpp
+    include/msgpack/v2/adaptor/raw_decl.hpp
+    include/msgpack/v2/adaptor/size_equal_only_decl.hpp
+    include/msgpack/v2/adaptor/v4raw_decl.hpp
+    include/msgpack/v2/cpp_config_decl.hpp
+    include/msgpack/v2/create_object_visitor.hpp
+    include/msgpack/v2/create_object_visitor_decl.hpp
+    include/msgpack/v2/detail/cpp03_zone_decl.hpp
+    include/msgpack/v2/detail/cpp11_zone_decl.hpp
+    include/msgpack/v2/fbuffer_decl.hpp
+    include/msgpack/v2/iterator_decl.hpp
+    include/msgpack/v2/meta_decl.hpp
+    include/msgpack/v2/null_visitor.hpp
+    include/msgpack/v2/null_visitor_decl.hpp
+    include/msgpack/v2/object.hpp
+    include/msgpack/v2/object_decl.hpp
+    include/msgpack/v2/object_fwd.hpp
+    include/msgpack/v2/object_fwd_decl.hpp
+    include/msgpack/v2/pack_decl.hpp
+    include/msgpack/v2/parse.hpp
+    include/msgpack/v2/parse_decl.hpp
+    include/msgpack/v2/parse_return.hpp
+    include/msgpack/v2/sbuffer_decl.hpp
+    include/msgpack/v2/unpack.hpp
+    include/msgpack/v2/unpack_decl.hpp
+    include/msgpack/v2/vrefbuffer_decl.hpp
+    include/msgpack/v2/x3_parse.hpp
+    include/msgpack/v2/x3_parse_decl.hpp
+    include/msgpack/v2/x3_unpack.hpp
+    include/msgpack/v2/x3_unpack_decl.hpp
+    include/msgpack/v2/zbuffer_decl.hpp
+    include/msgpack/v2/zone_decl.hpp
+    include/msgpack/v3/adaptor/adaptor_base.hpp
+    include/msgpack/v3/adaptor/adaptor_base_decl.hpp
+    include/msgpack/v3/adaptor/array_ref_decl.hpp
+    include/msgpack/v3/adaptor/boost/msgpack_variant_decl.hpp
+    include/msgpack/v3/adaptor/check_container_size_decl.hpp
+    include/msgpack/v3/adaptor/define_decl.hpp
+    include/msgpack/v3/adaptor/detail/cpp03_define_array_decl.hpp
+    include/msgpack/v3/adaptor/detail/cpp03_define_map_decl.hpp
+    include/msgpack/v3/adaptor/detail/cpp03_msgpack_tuple_decl.hpp
+    include/msgpack/v3/adaptor/detail/cpp11_define_array_decl.hpp
+    include/msgpack/v3/adaptor/detail/cpp11_define_map_decl.hpp
+    include/msgpack/v3/adaptor/detail/cpp11_msgpack_tuple_decl.hpp
+    include/msgpack/v3/adaptor/ext_decl.hpp
+    include/msgpack/v3/adaptor/fixint_decl.hpp
+    include/msgpack/v3/adaptor/int_decl.hpp
+    include/msgpack/v3/adaptor/map_decl.hpp
+    include/msgpack/v3/adaptor/msgpack_tuple_decl.hpp
+    include/msgpack/v3/adaptor/nil_decl.hpp
+    include/msgpack/v3/adaptor/raw_decl.hpp
+    include/msgpack/v3/adaptor/size_equal_only_decl.hpp
+    include/msgpack/v3/adaptor/v4raw_decl.hpp
+    include/msgpack/v3/cpp_config_decl.hpp
+    include/msgpack/v3/create_object_visitor_decl.hpp
+    include/msgpack/v3/detail/cpp03_zone_decl.hpp
+    include/msgpack/v3/detail/cpp11_zone_decl.hpp
+    include/msgpack/v3/fbuffer_decl.hpp
+    include/msgpack/v3/iterator_decl.hpp
+    include/msgpack/v3/meta_decl.hpp
+    include/msgpack/v3/null_visitor_decl.hpp
+    include/msgpack/v3/object_decl.hpp
+    include/msgpack/v3/object_fwd.hpp
+    include/msgpack/v3/object_fwd_decl.hpp
+    include/msgpack/v3/pack_decl.hpp
+    include/msgpack/v3/parse.hpp
+    include/msgpack/v3/parse_decl.hpp
+    include/msgpack/v3/parse_return.hpp
+    include/msgpack/v3/sbuffer_decl.hpp
+    include/msgpack/v3/unpack.hpp
+    include/msgpack/v3/unpack_decl.hpp
+    include/msgpack/v3/vrefbuffer_decl.hpp
+    include/msgpack/v3/x3_parse_decl.hpp
+    include/msgpack/v3/x3_unpack.hpp
+    include/msgpack/v3/x3_unpack_decl.hpp
+    include/msgpack/v3/zbuffer_decl.hpp
+    include/msgpack/v3/zone_decl.hpp
+    include/msgpack/version.hpp
+    include/msgpack/versioning.hpp
+    include/msgpack/vrefbuffer.hpp
+    include/msgpack/vrefbuffer_decl.hpp
+    include/msgpack/x3_parse.hpp
+    include/msgpack/x3_parse_decl.hpp
+    include/msgpack/x3_unpack.hpp
+    include/msgpack/x3_unpack_decl.hpp
+    include/msgpack/zbuffer.hpp
+    include/msgpack/zbuffer_decl.hpp
+    include/msgpack/zone.hpp
+    include/msgpack/zone_decl.hpp
+)
diff --git a/example/CMakeLists.txt b/example/CMakeLists.txt
index 0c6e66fc0374adff805eafe8d43a54648462bd5c..27edf05db1f1c5005b794b159b4639743a7188e2 100644
--- a/example/CMakeLists.txt
+++ b/example/CMakeLists.txt
@@ -1,9 +1,4 @@
-IF (NOT MSGPACK_CXX_ONLY)
-    ADD_SUBDIRECTORY (c)
-ENDIF ()
-IF (MSGPACK_ENABLE_CXX)
-    ADD_SUBDIRECTORY (cpp03)
-    ADD_SUBDIRECTORY (cpp11)
-    ADD_SUBDIRECTORY (boost)
-    ADD_SUBDIRECTORY (x3)
-ENDIF ()
+ADD_SUBDIRECTORY (cpp03)
+ADD_SUBDIRECTORY (cpp11)
+ADD_SUBDIRECTORY (boost)
+ADD_SUBDIRECTORY (x3)
diff --git a/include/msgpack/adaptor/define_decl.hpp b/include/msgpack/adaptor/define_decl.hpp
index 1880a8616500b3ed5eed4f5c6062b06eb0c3f72b..89b962e121fefe71462ff3fdf06d31a5bcb08437 100644
--- a/include/msgpack/adaptor/define_decl.hpp
+++ b/include/msgpack/adaptor/define_decl.hpp
@@ -14,11 +14,11 @@
 // http://www.boost.org/libs/preprocessor/doc/ref/variadics.html
 // However, supporting compiler detection is not complete. msgpack-c requires
 // variadic macro arguments support. So BOOST_PP_VARIADICS is defined here explicitly.
-#if !defined(MSGPACK_PP_VARIADICS)
-#define MSGPACK_PP_VARIADICS
+#if !defined(BOOST_PP_VARIADICS)
+#define BOOST_PP_VARIADICS
 #endif
 
-#include <msgpack/preprocessor.hpp>
+#include <boost/preprocessor.hpp>
 
 #include "msgpack/versioning.hpp"
 
@@ -45,18 +45,18 @@
 #define MSGPACK_NVP(name, value) (name) (value)
 
 #define MSGPACK_DEFINE_MAP_EACH_PROC(r, data, elem) \
-    MSGPACK_PP_IF( \
-        MSGPACK_PP_IS_BEGIN_PARENS(elem), \
+    BOOST_PP_IF( \
+        BOOST_PP_IS_BEGIN_PARENS(elem), \
         elem, \
-        (MSGPACK_PP_STRINGIZE(elem))(elem) \
+        (BOOST_PP_STRINGIZE(elem))(elem) \
     )
 
 #define MSGPACK_DEFINE_MAP_IMPL(...) \
-    MSGPACK_PP_SEQ_TO_TUPLE( \
-        MSGPACK_PP_SEQ_FOR_EACH( \
+    BOOST_PP_SEQ_TO_TUPLE( \
+        BOOST_PP_SEQ_FOR_EACH( \
             MSGPACK_DEFINE_MAP_EACH_PROC, \
             0, \
-            MSGPACK_PP_VARIADIC_TO_SEQ(__VA_ARGS__) \
+            BOOST_PP_VARIADIC_TO_SEQ(__VA_ARGS__) \
         ) \
     )
 
@@ -83,7 +83,7 @@
     }
 
 #define MSGPACK_BASE_MAP(base) \
-    (MSGPACK_PP_STRINGIZE(base))(*const_cast<base *>(static_cast<base const*>(this)))
+    (BOOST_PP_STRINGIZE(base))(*const_cast<base *>(static_cast<base const*>(this)))
 
 // MSGPACK_ADD_ENUM must be used in the global namespace.
 #define MSGPACK_ADD_ENUM(enum_name) \
diff --git a/include/msgpack/object.h b/include/msgpack/object.h
index e9431744b70b954259456cf4379ffad75d7769a8..66360354a444b550d9fead1e86bc4d6beb61a3e6 100644
--- a/include/msgpack/object.h
+++ b/include/msgpack/object.h
@@ -97,16 +97,6 @@ typedef struct msgpack_object_kv {
     msgpack_object val;
 } msgpack_object_kv;
 
-#if !defined(_KERNEL_MODE)
-MSGPACK_DLLEXPORT
-void msgpack_object_print(FILE* out, msgpack_object o);
-#endif
-
-MSGPACK_DLLEXPORT
-int msgpack_object_print_buffer(char *buffer, size_t buffer_size, msgpack_object o);
-
-MSGPACK_DLLEXPORT
-bool msgpack_object_equal(const msgpack_object x, const msgpack_object y);
 
 /** @} */
 
diff --git a/include/msgpack/sysdep.h b/include/msgpack/sysdep.h
index a1967338d7ea9c85808ff0161c2680069df89fad..3e1851be32f62af8eb04874a66a41f00fd2549b6 100644
--- a/include/msgpack/sysdep.h
+++ b/include/msgpack/sysdep.h
@@ -60,11 +60,7 @@
 #endif
 #elif defined(__GNUC__) && ((__GNUC__*10 + __GNUC_MINOR__) < 41)
 
-#   if defined(__cplusplus)
-#       define _msgpack_atomic_counter_header "msgpack/gcc_atomic.hpp"
-#   else
-#       define _msgpack_atomic_counter_header "msgpack/gcc_atomic.h"
-#   endif
+#    define _msgpack_atomic_counter_header "msgpack/gcc_atomic.hpp"
 
 #else
     typedef unsigned int _msgpack_atomic_counter_t;
@@ -94,7 +90,9 @@
 #endif
 
 #if !defined(MSGPACK_ENDIAN_LITTLE_BYTE) && !defined(MSGPACK_ENDIAN_BIG_BYTE)
-#include <msgpack/predef/other/endian.h>
+#include <boost/predef/other/endian.h>
+#define  MSGPACK_ENDIAN_LITTLE_BYTE  BOOST_ENDIAN_LITTLE_BYTE
+#define  MSGPACK_ENDIAN_BIG_BYTE  BOOST_ENDIAN_BIG_BYTE
 #endif // !defined(MSGPACK_ENDIAN_LITTLE_BYTE) && !defined(MSGPACK_ENDIAN_BIG_BYTE)
 
 #if MSGPACK_ENDIAN_LITTLE_BYTE
diff --git a/make_file_list.sh b/make_file_list.sh
index ba980daef2081d1d073d080f211bb47beb5291cd..7d401ff0ab876f55314a08182dd71a997ecd1f7e 100644
--- a/make_file_list.sh
+++ b/make_file_list.sh
@@ -1,48 +1,16 @@
 #!/bin/bash
 
-c_headers=(
-    include/msgpack.h
-    include/msgpack/gcc_atomic.h
-    include/msgpack/pack.h
-    include/msgpack/pack_define.h
-    include/msgpack/pack_template.h
-    include/msgpack/sbuffer.h
-    include/msgpack/timestamp.h
-    include/msgpack/unpack.h
-    include/msgpack/unpack_template.h
-    include/msgpack/util.h
-    include/msgpack/version.h
-    include/msgpack/vrefbuffer.h
-)
-
-rm -f c_headers.tmp
-for hdr in ${c_headers[@]}; do
-    echo $hdr >> c_headers.tmp
-done
-
-find src -name "*.c" | sed -e 's/\s\+/\n/g' | sort > srcs.tmp
-find include -name "*.h" | grep -vFf c_headers.tmp | sed -e 's/\s\+/\n/g' | sort > c_cpp_headers.tmp
+find include -name "*.h" | sed -e 's/\s\+/\n/g' | sort > c_headers.tmp
 find include -name "*.hpp" | sed -e 's/\s\+/\n/g' | sort > cpp_headers.tmp
 
-echo 'LIST (APPEND msgpackc_SOURCES' > Files.cmake
-cat srcs.tmp | sed -e 's/^/    /g' >> Files.cmake
-echo -e ')\n' >> Files.cmake
-
-echo '# For both C and C++ libraries
+echo '# .h files
 LIST (APPEND msgpackc_HEADERS' >> Files.cmake
-cat c_cpp_headers.tmp | sed -e 's/^/    /g' >> Files.cmake
+cat c_headers.tmp | sed -e 's/^/    /g' >> Files.cmake
 echo -e ')\n' >> Files.cmake
 
-echo 'IF (NOT MSGPACK_CXX_ONLY)
-    # Only for C library
-    LIST (APPEND msgpackc_HEADERS' >> Files.cmake
-cat c_headers.tmp | sed -e 's/^/        /g' >> Files.cmake
-echo -e '    )\nENDIF ()\n' >> Files.cmake
-
-echo 'IF (MSGPACK_ENABLE_CXX)
-    # Only for C++ library
-    LIST (APPEND msgpackc_HEADERS' >> Files.cmake
-cat cpp_headers.tmp | sed -e 's/^/        /g' >> Files.cmake
-echo -e '    )\nENDIF ()' >> Files.cmake
+echo '# .hpp files
+LIST (APPEND msgpackc_HEADERS' >> Files.cmake
+cat cpp_headers.tmp | sed -e 's/^/    /g' >> Files.cmake
+echo ')' >> Files.cmake
 
-rm -f srcs.tmp c_headers.tmp cpp_headers.tmp c_cpp_headers.tmp
+rm -f srcs.tmp c_headers.tmp cpp_headers.tmp
diff --git a/makedist.sh b/makedist.sh
index 71ac63e55dd9cfbb0072766d9f33955fd1364170..d031b9f152386bd49e935d72457f85144eb1d806 100644
--- a/makedist.sh
+++ b/makedist.sh
@@ -18,14 +18,12 @@ tar cf $filename $prefix/example
 tar --append --file=$filename $prefix/test
 tar --append --file=$filename $prefix/include
 tar --append --file=$filename $prefix/erb
-tar --append --file=$filename $prefix/src
 tar --append --file=$filename $prefix/fuzz
 
 tar --append --file=$filename $prefix/CMakeLists.txt
 tar --append --file=$filename $prefix/Files.cmake
 tar --append --file=$filename $prefix/NOTICE
 tar --append --file=$filename $prefix/Doxyfile
-tar --append --file=$filename $prefix/msgpack.pc.in
 tar --append --file=$filename $prefix/AUTHORS
 tar --append --file=$filename $prefix/README.md
 tar --append --file=$filename $prefix/LICENSE_1_0.txt
@@ -33,9 +31,6 @@ tar --append --file=$filename $prefix/ChangeLog
 tar --append --file=$filename $prefix/NEWS
 tar --append --file=$filename $prefix/COPYING
 tar --append --file=$filename $prefix/README
-tar --append --file=$filename $prefix/msgpack_vc8.sln
-tar --append --file=$filename $prefix/msgpack_vc8.vcproj
-tar --append --file=$filename $prefix/msgpack-config.cmake.in
 
 rm -f $prefix
 
diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index c86bfc53f2b75d158585c0d419682d309df01b99..5a37f94ecb37c40c83850c07d43378568fd9cdd4 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -7,84 +7,69 @@ INCLUDE_DIRECTORIES (
     ${ZLIB_INCLUDE_DIRS}
 )
 
-SET (tests_C
-    fixint_c.cpp
-    msgpack_c.cpp
-    pack_unpack_c.cpp
-    streaming_c.cpp
+LIST (APPEND check_PROGRAMS
+    array_ref.cpp
+    buffer.cpp
+    carray.cpp
+    cases.cpp
+    convert.cpp
+    fixint.cpp
+    inc_adaptor_define.cpp
+    json.cpp
+    limit.cpp
+    msgpack_basic.cpp
+    msgpack_container.cpp
+    msgpack_stream.cpp
+    msgpack_tuple.cpp
+    msgpack_vref.cpp
+    object.cpp
+    object_with_zone.cpp
+    pack_unpack.cpp
+    raw.cpp
+    reference.cpp
+    size_equal_only.cpp
+    streaming.cpp
+    user_class.cpp
+    version.cpp
+    visitor.cpp
+    zone.cpp
 )
 
-IF (NOT MSGPACK_CXX_ONLY)
+IF (MSGPACK_BOOST)
     LIST (APPEND check_PROGRAMS
-        ${tests_C}
+        boost_fusion.cpp
+        boost_variant.cpp
+        boost_optional.cpp
+        boost_string_ref.cpp
+        boost_string_view.cpp
     )
 ENDIF ()
 
-IF (MSGPACK_ENABLE_CXX)
+IF (MSGPACK_USE_X3_PARSE)
     LIST (APPEND check_PROGRAMS
-        array_ref.cpp
-        buffer.cpp
-        carray.cpp
-        cases.cpp
-        convert.cpp
-        fixint.cpp
-        inc_adaptor_define.cpp
-        json.cpp
-        limit.cpp
-        msgpack_basic.cpp
-        msgpack_container.cpp
-        msgpack_stream.cpp
-        msgpack_tuple.cpp
-        msgpack_vref.cpp
-        object.cpp
-        object_with_zone.cpp
-        pack_unpack.cpp
-        raw.cpp
-        reference.cpp
-        size_equal_only.cpp
-        streaming.cpp
-        user_class.cpp
-        version.cpp
-        visitor.cpp
-        zone.cpp
+        msgpack_x3_parse.cpp
     )
+ENDIF ()
 
-    IF (MSGPACK_BOOST)
-        LIST (APPEND check_PROGRAMS
-            boost_fusion.cpp
-            boost_variant.cpp
-            boost_optional.cpp
-            boost_string_ref.cpp
-            boost_string_view.cpp
-        )
-    ENDIF ()
-
-    IF (MSGPACK_USE_X3_PARSE)
-        LIST (APPEND check_PROGRAMS
-            msgpack_x3_parse.cpp
-        )
-    ENDIF ()
-
-    IF (MSGPACK_CXX11 OR MSGPACK_CXX17)
-        LIST (APPEND check_PROGRAMS
-            iterator_cpp11.cpp
-            msgpack_cpp11.cpp
-            reference_cpp11.cpp
-            reference_wrapper_cpp11.cpp
-            shared_ptr_cpp11.cpp
-            unique_ptr_cpp11.cpp
+IF (MSGPACK_CXX11 OR MSGPACK_CXX17)
+    LIST (APPEND check_PROGRAMS
+        iterator_cpp11.cpp
+        msgpack_cpp11.cpp
+        reference_cpp11.cpp
+        reference_wrapper_cpp11.cpp
+        shared_ptr_cpp11.cpp
+        unique_ptr_cpp11.cpp
 
-            # fuzzers are cpp11 only
-            fuzz_unpack_pack_fuzzer_cpp11.cpp
-        )
-    ENDIF ()
+        # fuzzers are cpp11 only
+        fuzz_unpack_pack_fuzzer_cpp11.cpp
+    )
+ENDIF ()
 
-    IF (MSGPACK_CXX17)
-        LIST (APPEND check_PROGRAMS
-            msgpack_cpp17.cpp
-        )
-    ENDIF ()
-ENDIF (MSGPACK_ENABLE_CXX)
+IF (MSGPACK_CXX17)
+    LIST (APPEND check_PROGRAMS
+        msgpack_cpp17.cpp
+    )
+ENDIF ()
 
 FOREACH (source_file ${check_PROGRAMS})
     GET_FILENAME_COMPONENT (source_file_we ${source_file} NAME_WE)
@@ -93,15 +78,8 @@ FOREACH (source_file ${check_PROGRAMS})
         ${source_file}
     )
 
-    LIST (FIND tests_C ${source_file} idx)
-    IF (idx GREATER -1)
-        SET (link_target msgpackc)
-    ELSE ()
-        SET (link_target msgpackc-cxx)
-    ENDIF ()
-
     TARGET_LINK_LIBRARIES (${source_file_we}
-        ${link_target}
+        msgpackc-cxx
         ${GTEST_BOTH_LIBRARIES}
         ${ZLIB_LIBRARIES}
         ${CMAKE_THREAD_LIBS_INIT}
@@ -123,14 +101,12 @@ FOREACH (source_file ${check_PROGRAMS})
     ENDIF ()
 ENDFOREACH ()
 
-IF (MSGPACK_ENABLE_CXX)
-    ADD_EXECUTABLE (
-        multi_file
-        multi_file1.cpp multi_file2.cpp
-    )
-    TARGET_INCLUDE_DIRECTORIES (multi_file
-        PRIVATE
-            $<TARGET_PROPERTY:msgpackc-cxx,INTERFACE_INCLUDE_DIRECTORIES>
-    )
-    ADD_TEST (multi_file multi_file)
-ENDIF ()
+ADD_EXECUTABLE (
+    multi_file
+    multi_file1.cpp multi_file2.cpp
+)
+TARGET_INCLUDE_DIRECTORIES (multi_file
+    PRIVATE
+        $<TARGET_PROPERTY:msgpackc-cxx,INTERFACE_INCLUDE_DIRECTORIES>
+)
+ADD_TEST (multi_file multi_file)
diff --git a/test/buffer.cpp b/test/buffer.cpp
index 4e099e22404273fcf8f696971ac953dc3c63eeb2..58298b6de278770de24b12dd0c903f5e2465db3d 100644
--- a/test/buffer.cpp
+++ b/test/buffer.cpp
@@ -1,8 +1,6 @@
 #include <msgpack.hpp>
 #include <msgpack/fbuffer.hpp>
-#include <msgpack/fbuffer.h>
 #include <msgpack/zbuffer.hpp>
-#include <msgpack/zbuffer.h>
 
 #if defined(__GNUC__)
 #pragma GCC diagnostic push
@@ -86,21 +84,6 @@ TEST(buffer, zbuffer)
 }
 
 
-TEST(buffer, zbuffer_c)
-{
-    msgpack_zbuffer zbuf;
-    EXPECT_TRUE(msgpack_zbuffer_init(&zbuf, 1, MSGPACK_ZBUFFER_INIT_SIZE));
-    EXPECT_EQ(0, msgpack_zbuffer_write(&zbuf, "a", 1));
-    EXPECT_EQ(0, msgpack_zbuffer_write(&zbuf, "a", 1));
-    EXPECT_EQ(0, msgpack_zbuffer_write(&zbuf, "a", 1));
-    EXPECT_EQ(0, msgpack_zbuffer_write(&zbuf, "", 0));
-
-    EXPECT_TRUE(msgpack_zbuffer_flush(&zbuf) != NULL);
-
-    msgpack_zbuffer_destroy(&zbuf);
-}
-
-
 TEST(buffer, fbuffer)
 {
 #if defined(_MSC_VER)
@@ -128,31 +111,3 @@ TEST(buffer, fbuffer)
     EXPECT_EQ(EOF, fgetc(file));
     fclose(file);
 }
-
-
-TEST(buffer, fbuffer_c)
-{
-#if defined(_MSC_VER)
-    FILE* file;
-    tmpfile_s(&file);
-#else  // defined(_MSC_VER)
-    FILE* file = tmpfile();
-#endif // defined(_MSC_VER)
-
-    void* fbuf = (void*)file;
-
-    EXPECT_TRUE( file != NULL );
-    EXPECT_EQ(0, msgpack_fbuffer_write(fbuf, "a", 1));
-    EXPECT_EQ(0, msgpack_fbuffer_write(fbuf, "a", 1));
-    EXPECT_EQ(0, msgpack_fbuffer_write(fbuf, "a", 1));
-
-    fflush(file);
-    rewind(file);
-    for (size_t i=0; i < 3; ++i) {
-        int ch = fgetc(file);
-        EXPECT_TRUE(ch != EOF);
-        EXPECT_EQ('a', (char) ch);
-    }
-    EXPECT_EQ(EOF, fgetc(file));
-    fclose(file);
-}
